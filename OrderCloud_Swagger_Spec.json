{
  "swagger": "2.0",
  "info": {
    "title": "OrderCloud",
    "description": "A full ecommerce backend as a service.",
    "version": "0.1",
    "contact": {
      "name": "Four51",
      "url": "http://public.four51.com/",
      "email": "ordercloud@four51.com"
    }
  },
  "host": "api.ordercloud.io",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "tokenUrl": "https://auth.ordercloud.io/oauth/token",
      "flow": "password",
      "scopes": {
        "FullAccess": "Full access of the security profile.",
        "ProductAdmin": "Product admin of the security profile.",
        "ProductReader": "Product reader of the security profile.",
        "InventoryAdmin": "Inventory admin of the security profile.",
        "ProductAssignmentAdmin": "Product assignment admin of the security profile.",
        "BuyerAdmin": "Buyer admin of the security profile.",
        "BuyerReader": "Buyer reader of the security profile.",
        "CategoryAdmin": "Category admin of the security profile.",
        "CategoryReader": "Category reader of the security profile.",
        "AddressAdmin": "Address admin of the security profile.",
        "AddressReader": "Address reader of the security profile.",
        "CostCenterAdmin": "Cost center admin of the security profile.",
        "CostCenterReader": "Cost center reader of the security profile.",
        "PromotionAdmin": "Promotion admin of the security profile.",
        "PromotionReader": "Promotion reader of the security profile.",
        "CreditCardAdmin": "Credit card admin of the security profile.",
        "CreditCardReader": "Credit card reader of the security profile.",
        "EmailTemplateAdmin": "Email template admin of the security profile.",
        "EmailTemplateReader": "Email template reader of the security profile.",
        "PriceScheduleAdmin": "Price schedule admin of the security profile.",
        "PriceScheduleReader": "Price schedule reader of the security profile.",
        "SpendingAccountAdmin": "Spending account admin of the security profile.",
        "SpendingAccountReader": "Spending account reader of the security profile.",
        "BuyerUserAdmin": "Buyer user admin of the security profile.",
        "BuyerUserReader": "Buyer user reader of the security profile.",
        "UserGroupAdmin": "User group admin of the security profile.",
        "UserGroupReader": "User group reader of the security profile.",
        "ApprovalRuleAdmin": "Approval rule admin of the security profile.",
        "ApprovalRuleReader": "Approval rule reader of the security profile.",
        "PermissionAdmin": "Permission admin of the security profile.",
        "OrderAdmin": "Order admin of the security profile.",
        "OrderReader": "Order reader of the security profile.",
        "UnsubmittedOrderReader": "Unsubmitted order reader of the security profile.",
        "MeAdmin": "Me admin of the security profile.",
        "MeXpAdmin": "Me xp admin of the security profile.",
        "MeAddressAdmin": "Me address admin of the security profile.",
        "MeCreditCardAdmin": "Me credit card admin of the security profile.",
        "OverrideUnitPrice": "Override unit price of the security profile.",
        "OverrideShipping": "Override shipping of the security profile.",
        "OverrideTax": "Override tax of the security profile."
      }
    }
  },
  "security": [
    {
      "auth": []
    }
  ],
  "paths": {
    "/SecurityProfiles/{securityProfileID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "SecurityProfile"
        ],
        "parameters": [
          {
            "name": "securityProfileID",
            "in": "path",
            "description": "ID of the security profile.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/SecurityProfiles": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "SecurityProfile"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/password/reset": {
      "post": {
        "responses": {
          "204": {
            "description": "Sends a temporary verification code via email, which must subsequently be passed in a Reset Password call."
          }
        },
        "operationId": "SendVerificationCode",
        "tags": [
          "PasswordReset"
        ],
        "parameters": [
          {
            "name": "passwordResetRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordResetRequest"
            }
          }
        ]
      }
    },
    "/password/reset/{verificationCode}": {
      "put": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ResetPassword",
        "tags": [
          "PasswordReset"
        ],
        "parameters": [
          {
            "name": "verificationCode",
            "in": "path",
            "description": "Verification code of the forgotten password.",
            "required": true,
            "type": "string"
          },
          {
            "name": "passwordReset",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordReset"
            }
          }
        ]
      }
    },
    "/me": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Me"
        ],
        "parameters": []
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/me/costcenters": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListCostCenters",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/usergroups": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListUserGroups",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/addresses": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAddresses",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "CreateAddress",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyerAddress"
            }
          }
        ]
      }
    },
    "/me/addresses/{addressID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetAddress",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateAddress",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyerAddress"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "Only available to Buyer Users."
          }
        },
        "operationId": "PatchAddress",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyerAddress"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Only available to Buyer Users."
          }
        },
        "operationId": "DeleteAddress",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/me/creditcards": {
      "post": {
        "responses": {
          "201": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "CreateCreditCard",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "creditCard",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyerCreditCard"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListCreditCards",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/creditcards/{creditcardID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetCreditCard",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "creditcardID",
            "in": "path",
            "description": "ID of the creditcard.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateCreditCard",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "creditcardID",
            "in": "path",
            "description": "ID of the creditcard.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCard",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyerCreditCard"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "Only available to Buyer Users."
          }
        },
        "operationId": "PatchCreditCard",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "creditcardID",
            "in": "path",
            "description": "ID of the creditcard.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCard",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuyerCreditCard"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Only available to Buyer Users."
          }
        },
        "operationId": "DeleteCreditCard",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "creditcardID",
            "in": "path",
            "description": "ID of the creditcard.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/me/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListCategories",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/categories/{parentID}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListSubcategories",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "parentID",
            "in": "path",
            "description": "ID of the parent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/products": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListProducts",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "categoryID",
            "in": "query",
            "description": "ID of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/products/{productID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetProduct",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/me/products/{productID}/specs": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListSpecs",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/products/{productID}/specs/{specID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetSpec",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/me/orders/outgoing": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListOutgoingOrders",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Lower bound of date range that the order was created (if outgoing) or submitted (if incoming).",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Upper bound of date range that the order was created (if outgoing) or submitted (if incoming).",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/orders/incoming": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListIncomingOrders",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Lower bound of date range that the order was created (if outgoing) or submitted (if incoming).",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Upper bound of date range that the order was created (if outgoing) or submitted (if incoming).",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/orders/{orderID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetOrder",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/me/promotions": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListPromotions",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/me/promotions/{promotionID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Only available to Buyer Users.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetPromotion",
        "tags": [
          "Me"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialOrder",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "TransferTempUserOrder",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tempUserToken",
            "in": "query",
            "description": "Temp user token of the order.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/orders/outgoing": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListOutgoing",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "query",
            "description": "ID of the buyer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Lower bound of date range that the order was created.",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Upper bound of date range that the order was created.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/orders/incoming": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListIncoming",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "query",
            "description": "ID of the buyer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Lower bound of date range that the order was submitted.",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Upper bound of date range that the order was submitted.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/approvals": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns all Approvals associated with the Order.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListApprovals",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/eligibleapprovers": {
      "get": {
        "responses": {
          "200": {
            "description": "Returns all Users who can approve or decline this order (but have not done so).",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListEligibleApprovers",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/submit": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Submit",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/approve": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Approve",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Comments to be saved with the order approval.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/decline": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Decline",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Comments to be saved with the order denial.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/cancel": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Cancel",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/ship": {
      "post": {
        "responses": {
          "201": {
            "description": "Create a new Shipment containing all Line Items from this Order.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Ship",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/shipto": {
      "put": {
        "responses": {
          "200": {
            "description": "Set the Shipping Address of all Line Items on the Order. Appropriate only when the address is not to be saved/reused. To use a saved Address (i.e. from the Addresses resource), PATCH the Order's ShippingAddressID property instead.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "SetShippingAddress",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Partially update the Shipping Address of all Line Items on the Order. Not allowed on unsubmitted orders where ShippingAddressID has been set on any Line Items. In that case, use the Addresses resource to update the Saved Address.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PatchShippingAddress",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/billto": {
      "put": {
        "responses": {
          "200": {
            "description": "Set the Billing Address of the Order. Appropriate only when the address is not to be saved/reused. To use a saved Address (i.e. from the Addresses resource), PATCH the Order's BillingAddressID property instead.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "SetBillingAddress",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Partially update the Billing Address of the Order. Not allowed on unsubmitted Orders where BillingAddressID has been set. In that case, use the Addresses resource to update the Saved Address.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PatchBillingAddress",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/promotions/{promoCode}": {
      "post": {
        "responses": {
          "201": {
            "description": "Add a Promotion to an Order.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "AddPromotion",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "promoCode",
            "in": "path",
            "description": "Promo code of the order.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Remove Promotion from Order.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "RemovePromotion",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "promoCode",
            "in": "path",
            "description": "Promo code of the order.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/promotions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListPromotions",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/lineitems/{lineItemID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LineItem"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialLineItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LineItem"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/lineitems": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LineItem"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/lineitems/{lineItemID}/shipto": {
      "put": {
        "responses": {
          "200": {
            "description": "Set the Shipping Address of the Line Item. Appropriate only when the Address is not to be saved/reused. To use a Saved Address (i.e. from the Addresses resource), PATCH the Line Item's ShippingAddressID property instead.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "SetShippingAddress",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Partially update the Shipping Address of the Line Item. Not allowed on unsubmitted Line Items where ShippingAddressID has been set. In that case, use the Addresses resource to update the Saved Address.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PatchShippingAddress",
        "tags": [
          "LineItem"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/payments/{paymentID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialPayment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/payments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "payment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/payments/{paymentID}/transactions": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "CreateTransaction",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransaction"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/orders/{orderID}/payments/{paymentID}/transactions/{transactionID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateTransaction",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionID",
            "in": "path",
            "description": "ID of the transaction.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transaction",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransaction"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PatchTransaction",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionID",
            "in": "path",
            "description": "ID of the transaction.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialTransaction",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransaction"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteTransaction",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentID",
            "in": "path",
            "description": "ID of the payment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionID",
            "in": "path",
            "description": "ID of the transaction.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/shipments/{shipmentID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentID",
            "in": "path",
            "description": "ID of the shipment.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentID",
            "in": "path",
            "description": "ID of the shipment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentID",
            "in": "path",
            "description": "ID of the shipment.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentID",
            "in": "path",
            "description": "ID of the shipment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/shipments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "query",
            "description": "ID of the order.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/shipments/{shipmentID}/items": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "SaveItem",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentID",
            "in": "path",
            "description": "ID of the shipment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "item",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentItem"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/shipments/{shipmentID}/items/{orderID}/{lineItemID}": {
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "DeleteItem",
        "tags": [
          "Shipment"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentID",
            "in": "path",
            "description": "ID of the shipment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lineItemID",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Buyer"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Buyer"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "company",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Buyer"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Buyer"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Buyer"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Buyer"
        ],
        "parameters": [
          {
            "name": "company",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Buyer"
            }
          }
        ]
      }
    },
    "/adminusers/{userID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "AdminUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "AdminUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "AdminUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Patch",
        "tags": [
          "AdminUser"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/adminusers": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "AdminUser"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "AdminUser"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/products/{productID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Patch",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ]
      }
    },
    "/products": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ]
      }
    },
    "/products/{productID}/variants/generate": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GenerateVariants",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "overwriteExisting",
            "in": "query",
            "description": "Overwrite existing of the product.",
            "required": false,
            "type": "boolean"
          }
        ]
      }
    },
    "/products/{productID}/variants": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListVariants",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{productID}/variants/{variantID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateVariant",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantID",
            "in": "path",
            "description": "ID of the variant.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variant",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variant"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PatchVariant",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantID",
            "in": "path",
            "description": "ID of the variant.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variant",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variant"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetVariant",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantID",
            "in": "path",
            "description": "ID of the variant.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/products/{productID}/variants/inventory": {
      "get": {
        "responses": {
          "200": {
            "description": "Listing the Variant Inventory will return a list of all variants under a specific product and each variant's available and reserved inventory.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListVariantInventory",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{productID}/variants/inventory/{variantID}": {
      "get": {
        "responses": {
          "200": {
            "description": "Getting the Variant Inventory will return the Name, Available Inventory and Reserved Inventory for a specific product variant based on the ProductID and VariantID specified. ",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetVariantInventory",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantID",
            "in": "path",
            "description": "ID of the variant.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/products/{productID}/variants/inventory/{variantID}/{inventory}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateVariantInventory",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "variantID",
            "in": "path",
            "description": "ID of the variant.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inventory",
            "in": "path",
            "description": "Inventory of the product.",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products/inventory": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListInventory",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{productID}/inventory": {
      "get": {
        "responses": {
          "200": {
            "description": "Getting the Inventory on an Inventory-enabled product returns two things: the Avalible inventory, and the Reserved inventory. When an Order includes a product on the a lineitem, the total amount of that product is reserved. When that Order is submitted, the products previously reserved for that order are removed from the total inventory and the reserved ammount.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetInventory",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/products/{productID}/inventory/{inventory}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateInventory",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inventory",
            "in": "path",
            "description": "Inventory of the product.",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products/assignments": {
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productAssignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductAssignment"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "query",
            "description": "ID of the product.",
            "required": false,
            "type": "string"
          },
          {
            "name": "buyerID",
            "in": "query",
            "description": "ID of the buyer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the product.",
            "required": false,
            "type": "string"
          },
          {
            "name": "priceScheduleID",
            "in": "query",
            "description": "ID of the price schedule.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{productID}/assignments/{buyerID}": {
      "delete": {
        "responses": {
          "204": {
            "description": "As price schedules aren't assigned to a party without their accompanying product, you don't use Delete Assignment to delete a price schedule. If you need to remove a price schedule assignment, update the assignment to have the price schedule ID as a null. "
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/priceschedules/{priceScheduleID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceScheduleID",
            "in": "path",
            "description": "ID of the price schedule.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceScheduleID",
            "in": "path",
            "description": "ID of the price schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "priceSchedule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceSchedule"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceScheduleID",
            "in": "path",
            "description": "ID of the price schedule.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceScheduleID",
            "in": "path",
            "description": "ID of the price schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "priceSchedule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceSchedule"
            }
          }
        ]
      }
    },
    "/priceschedules": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceSchedule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceSchedule"
            }
          }
        ]
      }
    },
    "/priceschedules/{priceScheduleID}/PriceBreaks": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "SavePriceBreak",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceScheduleID",
            "in": "path",
            "description": "ID of the price schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "priceBreak",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PriceBreak"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeletePriceBreak",
        "tags": [
          "PriceSchedule"
        ],
        "parameters": [
          {
            "name": "priceScheduleID",
            "in": "path",
            "description": "ID of the price schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Quantity of the price schedule.",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/specs/{specID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spec",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Spec"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spec",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Spec"
            }
          }
        ]
      }
    },
    "/specs": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "spec",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Spec"
            }
          }
        ]
      }
    },
    "/specs/productassignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListProductAssignments",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "query",
            "description": "ID of the spec.",
            "required": false,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "ID of the product.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "While DefinesVariant is an optional parameter, if it is set to 'False', generating product variants will not generate variants with that spec. This is useful for things like custom logos, where you don't want a defined variant product for each logo, but you do want to capture a product customization."
          }
        },
        "operationId": "SaveProductAssignment",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "productAssignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpecProductAssignment"
            }
          }
        ]
      }
    },
    "/specs/{specID}/productassignments/{productID}": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteProductAssignment",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/specs/{specID}/options": {
      "post": {
        "responses": {
          "201": {
            "description": "A Spec can have multiple Options-- for example, if the spec is called 'Color', the options might be 'Blue', 'Red', and 'Green'. ",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "CreateOption",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "option",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpecOption"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListOptions",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/specs/{specID}/options/{optionID}": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "UpdateOption",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "optionID",
            "in": "path",
            "description": "ID of the option.",
            "required": true,
            "type": "string"
          },
          {
            "name": "option",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpecOption"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PatchOption",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "optionID",
            "in": "path",
            "description": "ID of the option.",
            "required": true,
            "type": "string"
          },
          {
            "name": "option",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpecOption"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetOption",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "optionID",
            "in": "path",
            "description": "ID of the option.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteOption",
        "tags": [
          "Spec"
        ],
        "parameters": [
          {
            "name": "specID",
            "in": "path",
            "description": "ID of the spec.",
            "required": true,
            "type": "string"
          },
          {
            "name": "optionID",
            "in": "path",
            "description": "ID of the option.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/promotions/{promotionID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "type": "string"
          },
          {
            "name": "promo",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialPromotion",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        ]
      }
    },
    "/promotions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "promo",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Promotion"
            }
          }
        ]
      }
    },
    "/promotions/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "query",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "promotionID",
            "in": "query",
            "description": "ID of the promotion.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the promotion.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "assignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionAssignment"
            }
          }
        ]
      }
    },
    "/promotions/{promotionID}/assignments": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "Promotion"
        ],
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "description": "ID of the promotion.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buyerID",
            "in": "query",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/files/{fileID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "description": "ID of the file.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/files": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "PostFileData",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "Filename of the file.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/users/{userID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Patch",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/users": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/users/{userID}/accesstoken": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "GetAccessToken",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImpersonateTokenRequest"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/usergroups/{userGroupID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "path",
            "description": "ID of the user group.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "path",
            "description": "ID of the user group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "path",
            "description": "ID of the user group.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Patch",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "path",
            "description": "ID of the user group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/usergroups": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/usergroups/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListUserAssignments",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveUserAssignment",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupAssignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroupAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/usergroups/{userGroupID}/assignments/{userID}": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteUserAssignment",
        "tags": [
          "UserGroup"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "path",
            "description": "ID of the user group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories/{categoryID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Patch",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentID",
            "in": "query",
            "description": "ID of the parent.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories/{parentID}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListChildren",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentID",
            "in": "path",
            "description": "ID of the parent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories/productassignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListProductAssignments",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "query",
            "description": "ID of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "ID of the product.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveProductAssignment",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "productAssignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryProductAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories/{categoryID}/productassignments/{productID}": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteProductAssignment",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "path",
            "description": "ID of the product.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "query",
            "description": "ID of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryAssignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/categories/{categoryID}/assignments": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of the category.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/addresses/{addressID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/addresses": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/addresses/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressID",
            "in": "query",
            "description": "ID of the address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isShipping",
            "in": "query",
            "description": "Is shipping of the address.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isBilling",
            "in": "query",
            "description": "Is billing of the address.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/addresses/{addressID}/assignments": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressID",
            "in": "path",
            "description": "ID of the address.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/spendingaccounts/{spendingAccountID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccountID",
            "in": "path",
            "description": "ID of the spending account.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccountID",
            "in": "path",
            "description": "ID of the spending account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccount",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpendingAccount"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccountID",
            "in": "path",
            "description": "ID of the spending account.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccountID",
            "in": "path",
            "description": "ID of the spending account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccount",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpendingAccount"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/spendingaccounts": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccount",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpendingAccount"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/spendingaccounts/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccountID",
            "in": "query",
            "description": "ID of the spending account.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the spending account.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpendingAccountAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/spendingaccounts/{spendingAccountID}/assignments": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "SpendingAccount"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "spendingAccountID",
            "in": "path",
            "description": "ID of the spending account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/costcenters/{costCenterID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenterID",
            "in": "path",
            "description": "ID of the cost center.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenterID",
            "in": "path",
            "description": "ID of the cost center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenter",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenter"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenterID",
            "in": "path",
            "description": "ID of the cost center.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenterID",
            "in": "path",
            "description": "ID of the cost center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenter",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenter"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/costcenters": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenter",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenter"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/costcenters/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenterID",
            "in": "query",
            "description": "ID of the cost center.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the cost center.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenterAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/costcenters/{costCenterID}/assignments": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "CostCenter"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenterID",
            "in": "path",
            "description": "ID of the cost center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/approvalrules/{approvalRuleID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalRuleID",
            "in": "path",
            "description": "ID of the approval rule.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalRuleID",
            "in": "path",
            "description": "ID of the approval rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalRule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalRuleID",
            "in": "path",
            "description": "ID of the approval rule.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalRuleID",
            "in": "path",
            "description": "ID of the approval rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialApprovalRule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/approvalrules": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "approvalRule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/creditcards/{creditCardID}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCardID",
            "in": "path",
            "description": "ID of the credit card.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Update",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCardID",
            "in": "path",
            "description": "ID of the credit card.",
            "required": true,
            "type": "string"
          },
          {
            "name": "card",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditCard"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Delete",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCardID",
            "in": "path",
            "description": "ID of the credit card.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Patch",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCardID",
            "in": "path",
            "description": "ID of the credit card.",
            "required": true,
            "type": "string"
          },
          {
            "name": "card",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditCard"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/creditcards": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "List",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Word or phrase to search for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchOn",
            "in": "query",
            "description": "Comma-delimited list of fields to search on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Comma-delimited list of fields to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Create",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "card",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditCard"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/creditcards/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "ListAssignments",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCardID",
            "in": "query",
            "description": "ID of the credit card.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the credit card.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results to return. Default: 1",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results to return per page. Default: 20, max: 100.",
            "required": false,
            "type": "integer"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "SaveAssignment",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditCardAssignment"
            }
          }
        ]
      }
    },
    "/buyers/{buyerID}/creditcards/{creditCardID}/assignments": {
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "DeleteAssignment",
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creditCardID",
            "in": "path",
            "description": "ID of the credit card.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupID",
            "in": "query",
            "description": "ID of the user group.",
            "required": false,
            "type": "string"
          }
        ]
      }
    },
    "/buyers/{buyerID}/emailtemplates/{emailTemplateType}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "Get",
        "tags": [
          "EmailTemplate"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailTemplateType",
            "in": "path",
            "description": "Email template type of the email template. Possible values: OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined, OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment, InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse, CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived, ApprovalNotification, EmailLoginVerificationCode.",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Update",
        "tags": [
          "EmailTemplate"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailTemplateType",
            "in": "path",
            "description": "Email template type of the email template. Possible values: OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined, OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment, InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse, CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived, ApprovalNotification, EmailLoginVerificationCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailTemplate",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "Patch",
        "tags": [
          "EmailTemplate"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailTemplateType",
            "in": "path",
            "description": "Email template type of the email template. Possible values: OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined, OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment, InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse, CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived, ApprovalNotification, EmailLoginVerificationCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailTemplate",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": ""
          }
        },
        "operationId": "ResetToDefault",
        "tags": [
          "EmailTemplate"
        ],
        "parameters": [
          {
            "name": "buyerID",
            "in": "path",
            "description": "ID of the buyer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailTemplateType",
            "in": "path",
            "description": "Email template type of the email template. Possible values: OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined, OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment, InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse, CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived, ApprovalNotification, EmailLoginVerificationCode.",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "PasswordResetRequest": {
      "type": "object",
      "properties": {
        "ClientID": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        }
      }
    },
    "PasswordReset": {
      "type": "object",
      "properties": {
        "ClientID": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "TermsAccepted": {
          "format": "date",
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        },
        "SecurityProfileID": {
          "type": "string"
        }
      }
    },
    "Partial`1": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "TermsAccepted": {
          "format": "date",
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        },
        "SecurityProfileID": {
          "type": "string"
        }
      }
    },
    "BuyerAddress": {
      "type": "object",
      "properties": {
        "Shipping": {
          "type": "boolean"
        },
        "Billing": {
          "type": "boolean"
        },
        "CompanyName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Street1": {
          "type": "string"
        },
        "Street2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "AddressName": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "BuyerCreditCard": {
      "type": "object",
      "properties": {
        "Token": {
          "type": "string"
        },
        "CardType": {
          "type": "string"
        },
        "PartialAccountNumber": {
          "type": "string"
        },
        "CardholderName": {
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date",
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "FromUserID": {
          "type": "string"
        },
        "BillingAddressID": {
          "type": "string"
        },
        "ShippingAddressID": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "ShippingCost": {
          "type": "number"
        },
        "TaxCost": {
          "type": "number"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "Shipment": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Shipper": {
          "type": "string"
        },
        "DateShipped": {
          "format": "date",
          "type": "string"
        },
        "TrackingNumber": {
          "type": "string"
        },
        "Cost": {
          "type": "number"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/ShipmentItem"
          },
          "type": "array"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Street1": {
          "type": "string"
        },
        "Street2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Zip": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "AddressName": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "LineItem": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "ProductID": {
          "type": "string"
        },
        "Quantity": {
          "type": "integer"
        },
        "UnitPrice": {
          "type": "number"
        },
        "CostCenter": {
          "type": "string"
        },
        "DateNeeded": {
          "format": "date",
          "type": "string"
        },
        "ShippingAccount": {
          "type": "string"
        },
        "ShippingAddressID": {
          "type": "string"
        },
        "ShipfromAddressID": {
          "type": "string"
        },
        "ShipperID": {
          "type": "string"
        },
        "Specs": {
          "items": {
            "$ref": "#/definitions/ShipmentItem"
          },
          "type": "array"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "CreditCardID": {
          "type": "string"
        },
        "SpendingAccountID": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "PaymentTransaction": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "DateExecuted": {
          "format": "date",
          "type": "string"
        },
        "Amount": {
          "type": "number"
        },
        "Succeeded": {
          "type": "boolean"
        },
        "ResultCode": {
          "type": "string"
        },
        "ResultMessage": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "ShipmentItem": {
      "type": "object",
      "properties": {
        "OrderID": {
          "type": "string"
        },
        "LineItemID": {
          "type": "string"
        },
        "QuantityShipped": {
          "type": "integer"
        }
      }
    },
    "Buyer": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "QuantityMultiplier": {
          "type": "integer"
        },
        "ShipWeight": {
          "type": "number"
        },
        "Active": {
          "type": "boolean"
        },
        "Type": {
          "type": "string"
        },
        "InventoryEnabled": {
          "type": "boolean"
        },
        "InventoryNotificationPoint": {
          "type": "integer"
        },
        "VariantLevelInventory": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        },
        "AllowOrderExceedInventory": {
          "type": "boolean"
        },
        "InventoryVisible": {
          "type": "boolean"
        }
      }
    },
    "Variant": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "ProductAssignment": {
      "type": "object",
      "properties": {
        "ProductID": {
          "type": "string"
        },
        "StandardPriceScheduleID": {
          "type": "string"
        },
        "ReplenishmentPriceScheduleID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        },
        "BuyerID": {
          "type": "string"
        }
      }
    },
    "PriceSchedule": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ApplyTax": {
          "type": "boolean"
        },
        "ApplyShipping": {
          "type": "boolean"
        },
        "MaxQuantity": {
          "type": "integer"
        },
        "UseCumulativeQuantity": {
          "type": "boolean"
        },
        "RestrictedQuantity": {
          "type": "boolean"
        },
        "OrderType": {
          "type": "string"
        },
        "PriceBreaks": {
          "items": {
            "$ref": "#/definitions/ShipmentItem"
          },
          "type": "array"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "PriceBreak": {
      "type": "object",
      "properties": {
        "Quantity": {
          "type": "integer"
        },
        "Price": {
          "type": "number"
        }
      }
    },
    "Spec": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "ListOrder": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "DefaultValue": {
          "type": "string"
        },
        "Required": {
          "type": "boolean"
        },
        "AllowOpenText": {
          "type": "boolean"
        },
        "DefaultOptionID": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "SpecProductAssignment": {
      "type": "object",
      "properties": {
        "SpecID": {
          "type": "string"
        },
        "ProductID": {
          "type": "string"
        },
        "DefinesVariant": {
          "type": "boolean"
        }
      }
    },
    "SpecOption": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ListOrder": {
          "type": "integer"
        },
        "IsOpenText": {
          "type": "boolean"
        },
        "PriceMarkupType": {
          "type": "string"
        },
        "PriceMarkup": {
          "type": "number"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "Promotion": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UsagesRemaining": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "FinePrint": {
          "type": "string"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date",
          "type": "string"
        },
        "EligibleExpression": {
          "type": "string"
        },
        "ValueExpression": {
          "type": "string"
        },
        "CanCombine": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "PromotionAssignment": {
      "type": "object",
      "properties": {
        "PromotionID": {
          "type": "string"
        },
        "BuyerID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        }
      }
    },
    "ImpersonateTokenRequest": {
      "type": "object",
      "properties": {
        "ClientID": {
          "type": "string"
        },
        "Claims": {
          "items": {
            "$ref": "#/definitions/ShipmentItem"
          },
          "type": "array"
        }
      }
    },
    "UserGroup": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "UserGroupAssignment": {
      "type": "object",
      "properties": {
        "UserGroupID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        },
        "ListOrder": {
          "type": "integer"
        },
        "Active": {
          "type": "boolean"
        },
        "ParentID": {
          "type": "string"
        }
      }
    },
    "CategoryProductAssignment": {
      "type": "object",
      "properties": {
        "CategoryID": {
          "type": "string"
        },
        "ProductID": {
          "type": "string"
        },
        "ListOrder": {
          "type": "integer"
        }
      }
    },
    "CategoryAssignment": {
      "type": "object",
      "properties": {
        "CategoryID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        }
      }
    },
    "AddressAssignment": {
      "type": "object",
      "properties": {
        "AddressID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        },
        "IsShipping": {
          "type": "boolean"
        },
        "IsBilling": {
          "type": "boolean"
        }
      }
    },
    "SpendingAccount": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Balance": {
          "type": "number"
        },
        "AllowAsPaymentMethod": {
          "type": "boolean"
        },
        "RedemptionCode": {
          "type": "string"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "EndDate": {
          "format": "date",
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "SpendingAccountAssignment": {
      "type": "object",
      "properties": {
        "SpendingAccountID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        },
        "AllowExceed": {
          "type": "boolean"
        }
      }
    },
    "CostCenter": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "CostCenterAssignment": {
      "type": "object",
      "properties": {
        "CostCenterID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        }
      }
    },
    "ApprovalRule": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ApprovingGroupID": {
          "type": "string"
        },
        "RuleExpression": {
          "type": "string"
        },
        "Scope": {
          "type": "string"
        },
        "ScopeTimeUnit": {
          "type": "string"
        },
        "ScopeTimeNumber": {
          "type": "integer"
        },
        "ScopeStartDate": {
          "format": "date",
          "type": "string"
        },
        "ExpireAfterTimeUnit": {
          "type": "string"
        },
        "ExpireAfterNumber": {
          "type": "integer"
        },
        "ApproveOnExpire": {
          "type": "boolean"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "CreditCard": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "Token": {
          "type": "string"
        },
        "CardType": {
          "type": "string"
        },
        "PartialAccountNumber": {
          "type": "string"
        },
        "CardholderName": {
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date",
          "type": "string"
        },
        "xp": {
          "type": "object"
        }
      }
    },
    "CreditCardAssignment": {
      "type": "object",
      "properties": {
        "CreditCardID": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "UserGroupID": {
          "type": "string"
        }
      }
    },
    "EmailTemplate": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "ReplyEmail": {
          "type": "string"
        },
        "SendMessageType": {
          "type": "boolean"
        },
        "EmailFormatType": {
          "type": "string"
        }
      }
    }
  }
}