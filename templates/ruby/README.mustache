# {{gemName}}

## Introduction
{{appName}} gem is an SDK for {{appName}}'s API written in Ruby. All of the methods for the most part are a 1:1 reflection of the API. This guide will cover how to install and get started with {{appName}} Ruby gem.
{{moduleName}} - the Ruby gem for the {{appName}}

## Acknowledgment

This SDK is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

- API version: {{appVersion}}
- Package version: {{gemVersion}}
- Build date: {{generatedDate}}
- Build package: {{generatorClass}}

{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Requirements
- Ruby >= 2.3.0

## Installation

Add this line to your `Gemfile`:

    gem '{{{gemName}}}', '~> {{{gemVersion}}}'

Or run this in your terminal:
```shell
gem install {{{gemName}}}
```

## Configuration

You will need to provide the ClientID which identifies the Organization or Buyer Company you will be interacting with. The ClientID can be found in the application tab of your Dashboard. Check out this guide for more information. Once you have the ClientID you can configure it with the following function.

```ruby
# Load the gem
require '{{{gemName}}}'

# Setup authorization
{{{moduleName}}}.configure do |config|
  config.client_id = 'MY_CLIENT_ID'
  config.scopes= ['MY_SCOPE']
end
```

## Authentication

```ruby
{{{moduleName}}}::ApiAuth::login('username', 'password')
```

## Impersonation

```ruby
user_instance = {{{moduleName}}}::UserApi.new
impersonation_token = user_instance.get_access_token(buyer_id, user_id, { :claims => ['YOUR_CLAIM'] })

{{{moduleName}}}::ApiAuth::start_impersonate(impersonation_token)
puts 'Impersonation status: #{ {{{moduleName}}}::Configuration.default.impersonating?}'

{{{moduleName}}}::ApiAuth::stop_impersonate
puts 'Impersonation status: #{ {{{moduleName}}}::Configuration.default.impersonating?}'
```

## Example
```ruby
api_instance = {{{moduleName}}}::ProductApi.new

begin
  result = api_instance.list
  p result
rescue {{{moduleName}}}::ApiError => e
  puts "Exception when calling ProductApi->list: #{e}"
end
```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{moduleName}}::{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{{summary}}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{moduleName}}::{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}} All endpoints do not require authorization.
{{/authMethods}}{{#authMethods}}{{#last}} Authentication schemes defined for the API:{{/last}}{{/authMethods}}
{{#authMethods}}### {{name}}

{{#isApiKey}}- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}
