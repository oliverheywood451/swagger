# {{invokerPackage}}

## Introduction
This is a SDK for {{invokerPackage}}'s API written in php. All of the methods for the most part are a 1:1 reflection of the API. This guide will cover how to install and get started with {{appName}} Ruby gem.

## Acknowledgment

This SDK is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

- API version: {{appVersion}}
{{#artifactVersion}}
- Package version: {{artifactVersion}}
{{/artifactVersion}}
- Build date: {{generatedDate}}
- Build package: {{generatorClass}}

{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Requirements

PHP 5.5.9 and later

## Installation 
### Composer

To install the bindings via [Composer](http://getcomposer.org/), add the following to `composer.json`:

```
{
  "require": {
    "ordercloud-api/php-sdk": "0.0.1"
  }
}
```

Then run `composer install`

### Manual Installation

Download the files and include `autoload.php`:

```php
  require_once('/path/to/{{{invokerPackage}}}/autoload.php');
```

## Configuration

You will need to provide the ClientID which identifies the Organization or Buyer Company you will be interacting with. The ClientID can be found in the application tab of your Dashboard. Check out this guide for more information. Once you have the ClientID you can configure it with the following function.

```php
{{invokerPackage}}\Configuration::getDefaultConfiguration()->setClientId("MY_CLIENT_ID");
{{invokerPackage}}\Configuration::getDefaultConfiguration()->setScopes(["MY_SCOPES"]);
```

## Authentication

```php
{{invokerPackage}}\ApiAuth::login($username, $password);
```

## Impersonation

```php
$user_id = 'USER_ID';
$buyer_id = 'BUYER_ID';
$user_instance = {{invokerPackage}}\Api\UserApi();
$impersonation_token = $user_instance->getAccessToken($buyer_id, $user_id, ['YOUR_ROLES']);

{{{invokerPackage}}}\ApiAuth::startImpersonate($impersonation_token);
print('Impersonation status:' + {{{moduleName}}}\Configuration::getDefaultConfiguration()->isImpersonating());

{{{invokerPackage}}}\ApiAuth::stopImpersonate();
print('Impersonation status:' + {{{moduleName}}}\Configuration::getDefaultConfiguration()->isImpersonating());
```

## Example

```php
<?php
require_once(__DIR__.'/vendor/autoload.php');

$api_instance = {{{invokerPackage}}}\Api\ProductApi();

try {
  $result = $api_instance->callList();
  print_r($result);
} catch (Exception $e) {
  echo 'Exception when calling ProductApi->callList(): ', $e->getMessage(), PHP_EOL;
}
?>
```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}/{{classname}}.md#{{operationIdLowerCase}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation For Models

{{#models}}{{#model}} - [{{{classname}}}]({{modelDocPath}}/{{{classname}}}.md)
{{/model}}{{/models}}

## Documentation For Authorization

{{^authMethods}} All endpoints do not require authorization.
{{/authMethods}}{{#authMethods}}{{#last}} Authentication schemes defined for the API:{{/last}}{{/authMethods}}
{{#authMethods}}## {{{name}}}

{{#isApiKey}}- **Type**: API key
- **API key parameter name**: {{{keyParamName}}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}- **Type**: OAuth
- **Flow**: {{{flow}}}
- **Authorization URL**: {{{authorizationUrl}}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}} - **{{{scope}}}**: {{{description}}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

## Author

{{#apiInfo}}{{#apis}}{{^hasMore}}{{infoEmail}}
{{/hasMore}}{{/apis}}{{/apiInfo}}

