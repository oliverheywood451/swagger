/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.wordnik.client.api


import java.io.File

import org.scalatra.{ TypedParamSupport, ScalatraServlet }
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{FileUploadSupport, MultipartConfig, SizeConstraintExceededException}

import scala.collection.JavaConverters._

class FileApi (implicit val swagger: Swagger) extends ScalatraServlet
    with FileUploadSupport
    with JacksonJsonSupport
    with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "FileApi"
  override protected val applicationName: Option[String] = Some("/v1/File")

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val getOperation = (apiOperation[Object]("get")
      summary ""
      parameters(pathParam[String]("fileID").description(""))
  )

  get("/files/{fileID}",operation(getOperation)) {
    
    
      val fileID = params.getOrElse("fileID", halt(400))
    
    println("fileID: " + fileID)
  }

  

  val listOperation = (apiOperation[Object]("list")
      summary ""
      parameters(queryParam[Int]("page").description("").optional, queryParam[Int]("pageSize").description("").optional)
  )

  get("/files",operation(listOperation)) {
    
    
                val page = params.getAs[Int]("page")

    println("page: " + page)
    
    
                val pageSize = params.getAs[Int]("pageSize")

    println("pageSize: " + pageSize)
  }

  

  val postFileDataOperation = (apiOperation[Object]("postFileData")
      summary ""
      parameters(queryParam[String]("filename").description("").optional)
  )

  post("/files",operation(postFileDataOperation)) {
    
    
                val filename = params.getAs[String]("filename")

    println("filename: " + filename)
  }

}
