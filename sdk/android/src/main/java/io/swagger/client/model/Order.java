/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.math.BigDecimal;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Order  {
  
  @SerializedName("ID")
  private String ID = null;
  @SerializedName("Type")
  private String type = null;
  @SerializedName("FromUserID")
  private String fromUserID = null;
  @SerializedName("BillingAddressID")
  private String billingAddressID = null;
  @SerializedName("ShippingAddressID")
  private String shippingAddressID = null;
  @SerializedName("Comments")
  private String comments = null;
  @SerializedName("ShippingCost")
  private BigDecimal shippingCost = null;
  @SerializedName("TaxCost")
  private BigDecimal taxCost = null;
  @SerializedName("xp")
  private Object xp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getID() {
    return ID;
  }
  public void setID(String ID) {
    this.ID = ID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFromUserID() {
    return fromUserID;
  }
  public void setFromUserID(String fromUserID) {
    this.fromUserID = fromUserID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getBillingAddressID() {
    return billingAddressID;
  }
  public void setBillingAddressID(String billingAddressID) {
    this.billingAddressID = billingAddressID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getShippingAddressID() {
    return shippingAddressID;
  }
  public void setShippingAddressID(String shippingAddressID) {
    this.shippingAddressID = shippingAddressID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getComments() {
    return comments;
  }
  public void setComments(String comments) {
    this.comments = comments;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getShippingCost() {
    return shippingCost;
  }
  public void setShippingCost(BigDecimal shippingCost) {
    this.shippingCost = shippingCost;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTaxCost() {
    return taxCost;
  }
  public void setTaxCost(BigDecimal taxCost) {
    this.taxCost = taxCost;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getXp() {
    return xp;
  }
  public void setXp(Object xp) {
    this.xp = xp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return (ID == null ? order.ID == null : ID.equals(order.ID)) &&
        (type == null ? order.type == null : type.equals(order.type)) &&
        (fromUserID == null ? order.fromUserID == null : fromUserID.equals(order.fromUserID)) &&
        (billingAddressID == null ? order.billingAddressID == null : billingAddressID.equals(order.billingAddressID)) &&
        (shippingAddressID == null ? order.shippingAddressID == null : shippingAddressID.equals(order.shippingAddressID)) &&
        (comments == null ? order.comments == null : comments.equals(order.comments)) &&
        (shippingCost == null ? order.shippingCost == null : shippingCost.equals(order.shippingCost)) &&
        (taxCost == null ? order.taxCost == null : taxCost.equals(order.taxCost)) &&
        (xp == null ? order.xp == null : xp.equals(order.xp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (ID == null ? 0: ID.hashCode());
    result = 31 * result + (type == null ? 0: type.hashCode());
    result = 31 * result + (fromUserID == null ? 0: fromUserID.hashCode());
    result = 31 * result + (billingAddressID == null ? 0: billingAddressID.hashCode());
    result = 31 * result + (shippingAddressID == null ? 0: shippingAddressID.hashCode());
    result = 31 * result + (comments == null ? 0: comments.hashCode());
    result = 31 * result + (shippingCost == null ? 0: shippingCost.hashCode());
    result = 31 * result + (taxCost == null ? 0: taxCost.hashCode());
    result = 31 * result + (xp == null ? 0: xp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("  ID: ").append(ID).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  fromUserID: ").append(fromUserID).append("\n");
    sb.append("  billingAddressID: ").append(billingAddressID).append("\n");
    sb.append("  shippingAddressID: ").append(shippingAddressID).append("\n");
    sb.append("  comments: ").append(comments).append("\n");
    sb.append("  shippingCost: ").append(shippingCost).append("\n");
    sb.append("  taxCost: ").append(taxCost).append("\n");
    sb.append("  xp: ").append(xp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
