/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.ShipmentItem;
import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class PriceSchedule  {
  
  @SerializedName("ID")
  private String ID = null;
  @SerializedName("Name")
  private String name = null;
  @SerializedName("ApplyTax")
  private Boolean applyTax = null;
  @SerializedName("ApplyShipping")
  private Boolean applyShipping = null;
  @SerializedName("MaxQuantity")
  private Integer maxQuantity = null;
  @SerializedName("UseCumulativeQuantity")
  private Boolean useCumulativeQuantity = null;
  @SerializedName("RestrictedQuantity")
  private Boolean restrictedQuantity = null;
  @SerializedName("OrderType")
  private String orderType = null;
  @SerializedName("PriceBreaks")
  private List<ShipmentItem> priceBreaks = null;
  @SerializedName("xp")
  private Object xp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getID() {
    return ID;
  }
  public void setID(String ID) {
    this.ID = ID;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getApplyTax() {
    return applyTax;
  }
  public void setApplyTax(Boolean applyTax) {
    this.applyTax = applyTax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getApplyShipping() {
    return applyShipping;
  }
  public void setApplyShipping(Boolean applyShipping) {
    this.applyShipping = applyShipping;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getMaxQuantity() {
    return maxQuantity;
  }
  public void setMaxQuantity(Integer maxQuantity) {
    this.maxQuantity = maxQuantity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getUseCumulativeQuantity() {
    return useCumulativeQuantity;
  }
  public void setUseCumulativeQuantity(Boolean useCumulativeQuantity) {
    this.useCumulativeQuantity = useCumulativeQuantity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getRestrictedQuantity() {
    return restrictedQuantity;
  }
  public void setRestrictedQuantity(Boolean restrictedQuantity) {
    this.restrictedQuantity = restrictedQuantity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrderType() {
    return orderType;
  }
  public void setOrderType(String orderType) {
    this.orderType = orderType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<ShipmentItem> getPriceBreaks() {
    return priceBreaks;
  }
  public void setPriceBreaks(List<ShipmentItem> priceBreaks) {
    this.priceBreaks = priceBreaks;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getXp() {
    return xp;
  }
  public void setXp(Object xp) {
    this.xp = xp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceSchedule priceSchedule = (PriceSchedule) o;
    return (ID == null ? priceSchedule.ID == null : ID.equals(priceSchedule.ID)) &&
        (name == null ? priceSchedule.name == null : name.equals(priceSchedule.name)) &&
        (applyTax == null ? priceSchedule.applyTax == null : applyTax.equals(priceSchedule.applyTax)) &&
        (applyShipping == null ? priceSchedule.applyShipping == null : applyShipping.equals(priceSchedule.applyShipping)) &&
        (maxQuantity == null ? priceSchedule.maxQuantity == null : maxQuantity.equals(priceSchedule.maxQuantity)) &&
        (useCumulativeQuantity == null ? priceSchedule.useCumulativeQuantity == null : useCumulativeQuantity.equals(priceSchedule.useCumulativeQuantity)) &&
        (restrictedQuantity == null ? priceSchedule.restrictedQuantity == null : restrictedQuantity.equals(priceSchedule.restrictedQuantity)) &&
        (orderType == null ? priceSchedule.orderType == null : orderType.equals(priceSchedule.orderType)) &&
        (priceBreaks == null ? priceSchedule.priceBreaks == null : priceBreaks.equals(priceSchedule.priceBreaks)) &&
        (xp == null ? priceSchedule.xp == null : xp.equals(priceSchedule.xp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (ID == null ? 0: ID.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (applyTax == null ? 0: applyTax.hashCode());
    result = 31 * result + (applyShipping == null ? 0: applyShipping.hashCode());
    result = 31 * result + (maxQuantity == null ? 0: maxQuantity.hashCode());
    result = 31 * result + (useCumulativeQuantity == null ? 0: useCumulativeQuantity.hashCode());
    result = 31 * result + (restrictedQuantity == null ? 0: restrictedQuantity.hashCode());
    result = 31 * result + (orderType == null ? 0: orderType.hashCode());
    result = 31 * result + (priceBreaks == null ? 0: priceBreaks.hashCode());
    result = 31 * result + (xp == null ? 0: xp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceSchedule {\n");
    
    sb.append("  ID: ").append(ID).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  applyTax: ").append(applyTax).append("\n");
    sb.append("  applyShipping: ").append(applyShipping).append("\n");
    sb.append("  maxQuantity: ").append(maxQuantity).append("\n");
    sb.append("  useCumulativeQuantity: ").append(useCumulativeQuantity).append("\n");
    sb.append("  restrictedQuantity: ").append(restrictedQuantity).append("\n");
    sb.append("  orderType: ").append(orderType).append("\n");
    sb.append("  priceBreaks: ").append(priceBreaks).append("\n");
    sb.append("  xp: ").append(xp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
