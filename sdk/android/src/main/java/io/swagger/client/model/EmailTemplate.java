/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class EmailTemplate  {
  
  @SerializedName("Subject")
  private String subject = null;
  @SerializedName("Body")
  private String body = null;
  @SerializedName("ReplyEmail")
  private String replyEmail = null;
  @SerializedName("SendMessageType")
  private Boolean sendMessageType = null;
  @SerializedName("EmailFormatType")
  private String emailFormatType = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSubject() {
    return subject;
  }
  public void setSubject(String subject) {
    this.subject = subject;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getBody() {
    return body;
  }
  public void setBody(String body) {
    this.body = body;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getReplyEmail() {
    return replyEmail;
  }
  public void setReplyEmail(String replyEmail) {
    this.replyEmail = replyEmail;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getSendMessageType() {
    return sendMessageType;
  }
  public void setSendMessageType(Boolean sendMessageType) {
    this.sendMessageType = sendMessageType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEmailFormatType() {
    return emailFormatType;
  }
  public void setEmailFormatType(String emailFormatType) {
    this.emailFormatType = emailFormatType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailTemplate emailTemplate = (EmailTemplate) o;
    return (subject == null ? emailTemplate.subject == null : subject.equals(emailTemplate.subject)) &&
        (body == null ? emailTemplate.body == null : body.equals(emailTemplate.body)) &&
        (replyEmail == null ? emailTemplate.replyEmail == null : replyEmail.equals(emailTemplate.replyEmail)) &&
        (sendMessageType == null ? emailTemplate.sendMessageType == null : sendMessageType.equals(emailTemplate.sendMessageType)) &&
        (emailFormatType == null ? emailTemplate.emailFormatType == null : emailFormatType.equals(emailTemplate.emailFormatType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (subject == null ? 0: subject.hashCode());
    result = 31 * result + (body == null ? 0: body.hashCode());
    result = 31 * result + (replyEmail == null ? 0: replyEmail.hashCode());
    result = 31 * result + (sendMessageType == null ? 0: sendMessageType.hashCode());
    result = 31 * result + (emailFormatType == null ? 0: emailFormatType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailTemplate {\n");
    
    sb.append("  subject: ").append(subject).append("\n");
    sb.append("  body: ").append(body).append("\n");
    sb.append("  replyEmail: ").append(replyEmail).append("\n");
    sb.append("  sendMessageType: ").append(sendMessageType).append("\n");
    sb.append("  emailFormatType: ").append(emailFormatType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
