#import <Foundation/Foundation.h>
#import "SWGOrder.h"
#import "SWGAddress.h"
#import "SWGShipment.h"
#import "SWGApi.h"

/**
* OrderCloud
* A full ecommerce backend as a service.
*
* OpenAPI spec version: 0.1
* Contact: ordercloud@four51.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGOrderApi: NSObject <SWGApi>

extern NSString* kSWGOrderApiErrorDomain;
extern NSInteger kSWGOrderApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param promoCode Promo code of the order.
/// 
///  code:201 message:"Add a Promotion to an Order."
///
/// @return NSObject*
-(NSNumber*) addPromotionWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    promoCode: (NSString*) promoCode
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param comments Comments to be saved with the order approval. (optional)
/// 
///  code:201 message:""
///
/// @return NSObject*
-(NSNumber*) approveWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    comments: (NSString*) comments
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// 
///  code:201 message:""
///
/// @return NSObject*
-(NSNumber*) cancelWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param order 
/// 
///  code:201 message:""
///
/// @return NSObject*
-(NSNumber*) createWithBuyerID: (NSString*) buyerID
    order: (SWGOrder*) order
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param comments Comments to be saved with the order denial. (optional)
/// 
///  code:201 message:""
///
/// @return NSObject*
-(NSNumber*) declineWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    comments: (NSString*) comments
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// 
///  code:204 message:""
///
/// @return 
-(NSNumber*) deleteWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    completionHandler: (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) getWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:"Returns all Approvals associated with the Order."
///
/// @return NSObject*
-(NSNumber*) listApprovalsWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    search: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:"Returns all Users who can approve or decline this order (but have not done so)."
///
/// @return NSObject*
-(NSNumber*) listEligibleApproversWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    search: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer. (optional)
/// @param from Lower bound of date range that the order was submitted. (optional)
/// @param to Upper bound of date range that the order was submitted. (optional)
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) listIncomingWithBuyerID: (NSString*) buyerID
    from: (NSString*) from
    to: (NSString*) to
    search: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer. (optional)
/// @param from Lower bound of date range that the order was created. (optional)
/// @param to Upper bound of date range that the order was created. (optional)
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) listOutgoingWithBuyerID: (NSString*) buyerID
    from: (NSString*) from
    to: (NSString*) to
    search: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) listPromotionsWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    search: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param partialOrder 
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) patchWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    partialOrder: (SWGOrder*) partialOrder
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param address 
/// 
///  code:200 message:"Partially update the Billing Address of the Order. Not allowed on unsubmitted Orders where BillingAddressID has been set. In that case, use the Addresses resource to update the Saved Address."
///
/// @return NSObject*
-(NSNumber*) patchBillingAddressWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    address: (SWGAddress*) address
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param address 
/// 
///  code:200 message:"Partially update the Shipping Address of all Line Items on the Order. Not allowed on unsubmitted orders where ShippingAddressID has been set on any Line Items. In that case, use the Addresses resource to update the Saved Address."
///
/// @return NSObject*
-(NSNumber*) patchShippingAddressWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    address: (SWGAddress*) address
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param promoCode Promo code of the order.
/// 
///  code:200 message:"Remove Promotion from Order."
///
/// @return NSObject*
-(NSNumber*) removePromotionWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    promoCode: (NSString*) promoCode
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param address 
/// 
///  code:200 message:"Set the Billing Address of the Order. Appropriate only when the address is not to be saved/reused. To use a saved Address (i.e. from the Addresses resource), PATCH the Order's BillingAddressID property instead."
///
/// @return NSObject*
-(NSNumber*) setBillingAddressWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    address: (SWGAddress*) address
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param address 
/// 
///  code:200 message:"Set the Shipping Address of all Line Items on the Order. Appropriate only when the address is not to be saved/reused. To use a saved Address (i.e. from the Addresses resource), PATCH the Order's ShippingAddressID property instead."
///
/// @return NSObject*
-(NSNumber*) setShippingAddressWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    address: (SWGAddress*) address
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param shipment 
/// 
///  code:201 message:"Create a new Shipment containing all Line Items from this Order."
///
/// @return NSObject*
-(NSNumber*) shipWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    shipment: (SWGShipment*) shipment
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// 
///  code:201 message:""
///
/// @return NSObject*
-(NSNumber*) submitWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param tempUserToken Temp user token of the order.
/// 
///  code:204 message:""
///
/// @return 
-(NSNumber*) transferTempUserOrderWithBuyerID: (NSString*) buyerID
    tempUserToken: (NSString*) tempUserToken
    completionHandler: (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param buyerID ID of the buyer.
/// @param orderID ID of the order.
/// @param order 
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) updateWithBuyerID: (NSString*) buyerID
    orderID: (NSString*) orderID
    order: (SWGOrder*) order
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
