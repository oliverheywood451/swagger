#import <Foundation/Foundation.h>
#import "SWGSpec.h"
#import "SWGSpecOption.h"
#import "SWGSpecProductAssignment.h"
#import "SWGApi.h"

/**
* OrderCloud
* A full ecommerce backend as a service.
*
* OpenAPI spec version: 0.1
* Contact: ordercloud@four51.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGSpecApi: NSObject <SWGApi>

extern NSString* kSWGSpecApiErrorDomain;
extern NSInteger kSWGSpecApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// 
/// 
///
/// @param spec 
/// 
///  code:201 message:""
///
/// @return NSObject*
-(NSNumber*) createWithSpec: (SWGSpec*) spec
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param option 
/// 
///  code:201 message:"A Spec can have multiple Options-- for example, if the spec is called 'Color', the options might be 'Blue', 'Red', and 'Green'. "
///
/// @return NSObject*
-(NSNumber*) createOptionWithSpecID: (NSString*) specID
    option: (SWGSpecOption*) option
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// 
///  code:204 message:""
///
/// @return 
-(NSNumber*) deleteWithSpecID: (NSString*) specID
    completionHandler: (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param optionID ID of the option.
/// 
///  code:204 message:""
///
/// @return 
-(NSNumber*) deleteOptionWithSpecID: (NSString*) specID
    optionID: (NSString*) optionID
    completionHandler: (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param productID ID of the product.
/// 
///  code:204 message:""
///
/// @return 
-(NSNumber*) deleteProductAssignmentWithSpecID: (NSString*) specID
    productID: (NSString*) productID
    completionHandler: (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) getWithSpecID: (NSString*) specID
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param optionID ID of the option.
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) getOptionWithSpecID: (NSString*) specID
    optionID: (NSString*) optionID
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) listWithSearch: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param search Word or phrase to search for. (optional)
/// @param searchOn Comma-delimited list of fields to search on. (optional)
/// @param sortBy Comma-delimited list of fields to sort by. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) listOptionsWithSpecID: (NSString*) specID
    search: (NSString*) search
    searchOn: (NSString*) searchOn
    sortBy: (NSString*) sortBy
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec. (optional)
/// @param productID ID of the product. (optional)
/// @param page Page of results to return. Default: 1 (optional)
/// @param pageSize Number of results to return per page. Default: 20, max: 100. (optional)
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) listProductAssignmentsWithSpecID: (NSString*) specID
    productID: (NSString*) productID
    page: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param spec 
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) patchWithSpecID: (NSString*) specID
    spec: (SWGSpec*) spec
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param optionID ID of the option.
/// @param option 
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) patchOptionWithSpecID: (NSString*) specID
    optionID: (NSString*) optionID
    option: (SWGSpecOption*) option
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param productAssignment 
/// 
///  code:204 message:"While DefinesVariant is an optional parameter, if it is set to 'False', generating product variants will not generate variants with that spec. This is useful for things like custom logos, where you don't want a defined variant product for each logo, but you do want to capture a product customization."
///
/// @return 
-(NSNumber*) saveProductAssignmentWithProductAssignment: (SWGSpecProductAssignment*) productAssignment
    completionHandler: (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param spec 
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) updateWithSpecID: (NSString*) specID
    spec: (SWGSpec*) spec
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// 
/// 
///
/// @param specID ID of the spec.
/// @param optionID ID of the option.
/// @param option 
/// 
///  code:200 message:""
///
/// @return NSObject*
-(NSNumber*) updateOptionWithSpecID: (NSString*) specID
    optionID: (NSString*) optionID
    option: (SWGSpecOption*) option
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;



@end
