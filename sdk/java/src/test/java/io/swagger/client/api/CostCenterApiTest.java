/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CostCenter;
import io.swagger.client.model.CostCenterAssignment;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CostCenterApi
 */
public class CostCenterApiTest {

    private final CostCenterApi api = new CostCenterApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String buyerID = null;
        CostCenter costCenter = null;
        // Object response = api.create(buyerID, costCenter);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String buyerID = null;
        String costCenterID = null;
        // api.delete(buyerID, costCenterID);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAssignmentTest() throws ApiException {
        String buyerID = null;
        String costCenterID = null;
        String userID = null;
        String userGroupID = null;
        // api.deleteAssignment(buyerID, costCenterID, userID, userGroupID);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        String buyerID = null;
        String costCenterID = null;
        // Object response = api.get(buyerID, costCenterID);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        String buyerID = null;
        String search = null;
        String searchOn = null;
        String sortBy = null;
        Integer page = null;
        Integer pageSize = null;
        // Object response = api.list(buyerID, search, searchOn, sortBy, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAssignmentsTest() throws ApiException {
        String buyerID = null;
        String costCenterID = null;
        String userID = null;
        String userGroupID = null;
        String level = null;
        Integer page = null;
        Integer pageSize = null;
        // Object response = api.listAssignments(buyerID, costCenterID, userID, userGroupID, level, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchTest() throws ApiException {
        String buyerID = null;
        String costCenterID = null;
        CostCenter costCenter = null;
        // Object response = api.patch(buyerID, costCenterID, costCenter);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveAssignmentTest() throws ApiException {
        String buyerID = null;
        CostCenterAssignment assignment = null;
        // api.saveAssignment(buyerID, assignment);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String buyerID = null;
        String costCenterID = null;
        CostCenter costCenter = null;
        // Object response = api.update(buyerID, costCenterID, costCenter);

        // TODO: test validations
    }
    
}
