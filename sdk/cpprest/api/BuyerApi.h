/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * BuyerApi.h
 * 
 * 
 */
 
#ifndef BuyerApi_H_
#define BuyerApi_H_


#include "ApiClient.h"

#include "Buyer.h"
#include "Object.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  BuyerApi
{
public:
    BuyerApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~BuyerApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="company"></param>
    pplx::task<std::shared_ptr<Object>> create(std::shared_ptr<Buyer> company);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="buyerID">ID of the buyer.</param>
    pplx::task<void> delete(utility::string_t buyerID);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="buyerID">ID of the buyer.</param>
    pplx::task<std::shared_ptr<Object>> get(utility::string_t buyerID);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="search">Word or phrase to search for. (optional)</param>/// <param name="page">Page of results to return. Default: 1 (optional)</param>/// <param name="pageSize">Number of results to return per page. Default: 20, max: 100. (optional)</param>
    pplx::task<std::shared_ptr<Object>> list(utility::string_t search, int32_t page, int32_t pageSize);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="buyerID">ID of the buyer.</param>/// <param name="company"></param>
    pplx::task<std::shared_ptr<Object>> update(utility::string_t buyerID, std::shared_ptr<Buyer> company);
    
protected:
    std::shared_ptr<ApiClient> m_ApiClient;    
};
    
}
}
}
}

#endif /* BuyerApi_H_ */

