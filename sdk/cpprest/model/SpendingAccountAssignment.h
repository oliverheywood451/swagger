/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * SpendingAccountAssignment.h
 * 
 * 
 */

#ifndef SpendingAccountAssignment_H_
#define SpendingAccountAssignment_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SpendingAccountAssignment
	: public ModelBase
{
public:
    SpendingAccountAssignment();
    virtual ~SpendingAccountAssignment();

	/////////////////////////////////////////////
	/// ModelBase overrides
	
    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;
    
 	/////////////////////////////////////////////
	/// SpendingAccountAssignment members
	   
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSpendingAccountID() const;
    void setSpendingAccountID(utility::string_t value);
    bool SpendingAccountIDIsSet() const;
    void unsetSpendingAccountID();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserID() const;
    void setUserID(utility::string_t value);
    bool UserIDIsSet() const;
    void unsetUserID();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserGroupID() const;
    void setUserGroupID(utility::string_t value);
    bool UserGroupIDIsSet() const;
    void unsetUserGroupID();
    /// <summary>
    /// 
    /// </summary>
    bool getAllowExceed() const;
    void setAllowExceed(bool value);
    bool AllowExceedIsSet() const;
    void unsetAllowExceed();
    
protected:
    utility::string_t m_SpendingAccountID;
    bool m_SpendingAccountIDIsSet;
utility::string_t m_UserID;
    bool m_UserIDIsSet;
utility::string_t m_UserGroupID;
    bool m_UserGroupIDIsSet;
bool m_AllowExceed;
    bool m_AllowExceedIsSet;
};

}
}
}
}

#endif /* SpendingAccountAssignment_H_ */
