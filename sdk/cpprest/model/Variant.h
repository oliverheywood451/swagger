/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Variant.h
 * 
 * 
 */

#ifndef Variant_H_
#define Variant_H_


#include "ModelBase.h"

#include "Object.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Variant
	: public ModelBase
{
public:
    Variant();
    virtual ~Variant();

	/////////////////////////////////////////////
	/// ModelBase overrides
	
    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;
    
 	/////////////////////////////////////////////
	/// Variant members
	   
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getID() const;
    void setID(utility::string_t value);
    bool IDIsSet() const;
    void unsetID();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool NameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
    bool DescriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    bool getActive() const;
    void setActive(bool value);
    bool ActiveIsSet() const;
    void unsetActive();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getXp() const;
    void setXp(std::shared_ptr<Object> value);
    bool xpIsSet() const;
    void unsetXp();
    
protected:
    utility::string_t m_ID;
    bool m_IDIsSet;
utility::string_t m_Name;
    bool m_NameIsSet;
utility::string_t m_Description;
    bool m_DescriptionIsSet;
bool m_Active;
    bool m_ActiveIsSet;
std::shared_ptr<Object> m_Xp;
    bool m_XpIsSet;
};

}
}
}
}

#endif /* Variant_H_ */
