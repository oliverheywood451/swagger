/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



#include "ShipmentItem.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

ShipmentItem::ShipmentItem()
{
    m_OrderID = U("");
    m_OrderIDIsSet = false;
    m_LineItemID = U("");
    m_LineItemIDIsSet = false;
    m_QuantityShipped = nullptr;
    m_QuantityShippedIsSet = false;
    
}

ShipmentItem::~ShipmentItem()
{
}

void ShipmentItem::validate() 
{
    // TODO: implement validation
}

web::json::value ShipmentItem::toJson() const
{
    web::json::value val = web::json::value::object();
     
	if(m_OrderIDIsSet)
    {
        val[U("OrderID")] = ModelBase::toJson(m_OrderID);
    }
    if(m_LineItemIDIsSet)
    {
        val[U("LineItemID")] = ModelBase::toJson(m_LineItemID);
    }
    if(m_QuantityShippedIsSet)
    {
        val[U("QuantityShipped")] = ModelBase::toJson(m_QuantityShipped);
    }
    

    return val;
}

void ShipmentItem::fromJson(web::json::value& val)
{
    if(val.has_field(U("OrderID")))
    {
        setOrderID(ModelBase::stringFromJson(val[U("OrderID")]));
                
    }
    if(val.has_field(U("LineItemID")))
    {
        setLineItemID(ModelBase::stringFromJson(val[U("LineItemID")]));
                
    }
    if(val.has_field(U("QuantityShipped")))
    {
        setQuantityShipped(ModelBase::int32_tFromJson(val[U("QuantityShipped")]));
    }
    
}

void ShipmentItem::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
	if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
	{
		namePrefix += U(".");
	}

	if(m_OrderIDIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("OrderID"), m_OrderID));
                
    }
    if(m_LineItemIDIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("LineItemID"), m_LineItemID));
                
    }
    if(m_QuantityShippedIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("QuantityShipped"), m_QuantityShipped));
    }
    
}

void ShipmentItem::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
	if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
	{
		namePrefix += U(".");
	}

    if(multipart->hasContent(U("OrderID")))
    {
        setOrderID(ModelBase::stringFromHttpContent(multipart->getContent(U("OrderID"))));
                
    }
    if(multipart->hasContent(U("LineItemID")))
    {
        setLineItemID(ModelBase::stringFromHttpContent(multipart->getContent(U("LineItemID"))));
                
    }
    if(multipart->hasContent(U("QuantityShipped")))
    {
        setQuantityShipped(ModelBase::int32_tFromHttpContent(multipart->getContent(U("QuantityShipped"))));
    }
    
}
    
   
utility::string_t ShipmentItem::getOrderID() const
{
	return m_OrderID;
}
void ShipmentItem::setOrderID(utility::string_t value)
{
	m_OrderID = value;
    m_OrderIDIsSet = true;
}
bool ShipmentItem::OrderIDIsSet() const
{
    return m_OrderIDIsSet;
}
void ShipmentItem::unsetOrderID() 
{
    m_OrderIDIsSet = false;
}
utility::string_t ShipmentItem::getLineItemID() const
{
	return m_LineItemID;
}
void ShipmentItem::setLineItemID(utility::string_t value)
{
	m_LineItemID = value;
    m_LineItemIDIsSet = true;
}
bool ShipmentItem::LineItemIDIsSet() const
{
    return m_LineItemIDIsSet;
}
void ShipmentItem::unsetLineItemID() 
{
    m_LineItemIDIsSet = false;
}
int32_t ShipmentItem::getQuantityShipped() const
{
	return m_QuantityShipped;
}
void ShipmentItem::setQuantityShipped(int32_t value)
{
	m_QuantityShipped = value;
    m_QuantityShippedIsSet = true;
}
bool ShipmentItem::QuantityShippedIsSet() const
{
    return m_QuantityShippedIsSet;
}
void ShipmentItem::unsetQuantityShipped() 
{
    m_QuantityShippedIsSet = false;
}

}
}
}
}

