---
swagger: "2.0"
info:
  description: "A full ecommerce backend as a service."
  version: "0.1"
  title: "OrderCloud"
  contact:
    name: "Four51"
    url: "http://public.four51.com/"
    email: "ordercloud@four51.com"
host: "api.ordercloud.io"
basePath: "/v1"
schemes:
- "https"
paths:
  /SecurityProfiles:
    get:
      tags:
      - "SecurityProfile"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SecurityProfile"
  /SecurityProfiles/{securityProfileID}:
    get:
      tags:
      - "SecurityProfile"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "securityProfileID"
        in: "path"
        description: "ID of the security profile."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SecurityProfile"
  /adminusers:
    get:
      tags:
      - "AdminUser"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "AdminUser"
    post:
      tags:
      - "AdminUser"
      operationId: "controllers.default_controller.create"
      parameters:
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "AdminUser"
  /adminusers/{userID}:
    get:
      tags:
      - "AdminUser"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "AdminUser"
    put:
      tags:
      - "AdminUser"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "AdminUser"
    delete:
      tags:
      - "AdminUser"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "AdminUser"
    patch:
      tags:
      - "AdminUser"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "AdminUser"
  /buyers:
    get:
      tags:
      - "Buyer"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Buyer"
    post:
      tags:
      - "Buyer"
      operationId: "controllers.default_controller.create"
      parameters:
      - in: "body"
        name: "company"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Buyer"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Buyer"
  /buyers/{buyerID}:
    get:
      tags:
      - "Buyer"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Buyer"
    put:
      tags:
      - "Buyer"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "company"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Buyer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Buyer"
    delete:
      tags:
      - "Buyer"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Buyer"
  /buyers/{buyerID}/addresses:
    get:
      tags:
      - "Address"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Address"
    post:
      tags:
      - "Address"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Address"
  /buyers/{buyerID}/addresses/assignments:
    get:
      tags:
      - "Address"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "addressID"
        in: "query"
        description: "ID of the address."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the address."
        required: false
        type: "string"
      - name: "isShipping"
        in: "query"
        description: "Is shipping of the address."
        required: false
        type: "boolean"
      - name: "isBilling"
        in: "query"
        description: "Is billing of the address."
        required: false
        type: "boolean"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Address"
    post:
      tags:
      - "Address"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "assignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/AddressAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Address"
  /buyers/{buyerID}/addresses/{addressID}:
    get:
      tags:
      - "Address"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Address"
    put:
      tags:
      - "Address"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Address"
    delete:
      tags:
      - "Address"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Address"
    patch:
      tags:
      - "Address"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Address"
  /buyers/{buyerID}/addresses/{addressID}/assignments:
    delete:
      tags:
      - "Address"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Address"
  /buyers/{buyerID}/approvalrules:
    get:
      tags:
      - "ApprovalRule"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "ApprovalRule"
    post:
      tags:
      - "ApprovalRule"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "approvalRule"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ApprovalRule"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "ApprovalRule"
  /buyers/{buyerID}/approvalrules/{approvalRuleID}:
    get:
      tags:
      - "ApprovalRule"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "approvalRuleID"
        in: "path"
        description: "ID of the approval rule."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "ApprovalRule"
    put:
      tags:
      - "ApprovalRule"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "approvalRuleID"
        in: "path"
        description: "ID of the approval rule."
        required: true
        type: "string"
      - in: "body"
        name: "approvalRule"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ApprovalRule"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "ApprovalRule"
    delete:
      tags:
      - "ApprovalRule"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "approvalRuleID"
        in: "path"
        description: "ID of the approval rule."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "ApprovalRule"
    patch:
      tags:
      - "ApprovalRule"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "approvalRuleID"
        in: "path"
        description: "ID of the approval rule."
        required: true
        type: "string"
      - in: "body"
        name: "partialApprovalRule"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ApprovalRule"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "ApprovalRule"
  /buyers/{buyerID}/categories:
    get:
      tags:
      - "Category"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "parentID"
        in: "query"
        description: "ID of the parent."
        required: false
        type: "string"
      - name: "depth"
        in: "query"
        description: "Depth of the category."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
    post:
      tags:
      - "Category"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "category"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/categories/assignments:
    get:
      tags:
      - "Category"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "query"
        description: "ID of the category."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the category."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
    post:
      tags:
      - "Category"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "categoryAssignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CategoryAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/categories/productassignments:
    get:
      tags:
      - "Category"
      operationId: "controllers.default_controller.list_product_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "query"
        description: "ID of the category."
        required: false
        type: "string"
      - name: "productID"
        in: "query"
        description: "ID of the product."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
    post:
      tags:
      - "Category"
      operationId: "controllers.default_controller.save_product_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "productAssignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CategoryProductAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/categories/{categoryID}:
    get:
      tags:
      - "Category"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "path"
        description: "ID of the category."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
    put:
      tags:
      - "Category"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "path"
        description: "ID of the category."
        required: true
        type: "string"
      - in: "body"
        name: "category"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
    delete:
      tags:
      - "Category"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "path"
        description: "ID of the category."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Category"
    patch:
      tags:
      - "Category"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "path"
        description: "ID of the category."
        required: true
        type: "string"
      - in: "body"
        name: "category"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/categories/{categoryID}/assignments:
    delete:
      tags:
      - "Category"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "path"
        description: "ID of the category."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/categories/{categoryID}/productassignments/{productID}:
    delete:
      tags:
      - "Category"
      operationId: "controllers.default_controller.delete_product_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "categoryID"
        in: "path"
        description: "ID of the category."
        required: true
        type: "string"
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/categories/{parentID}/categories:
    get:
      tags:
      - "Category"
      operationId: "controllers.default_controller.list_children"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "parentID"
        in: "path"
        description: "ID of the parent."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "depth"
        in: "query"
        description: "Depth of the category."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Category"
  /buyers/{buyerID}/costcenters:
    get:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CostCenter"
    post:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "costCenter"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CostCenter"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CostCenter"
  /buyers/{buyerID}/costcenters/assignments:
    get:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "costCenterID"
        in: "query"
        description: "ID of the cost center."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the cost center."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CostCenter"
    post:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "assignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CostCenterAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "CostCenter"
  /buyers/{buyerID}/costcenters/{costCenterID}:
    get:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "costCenterID"
        in: "path"
        description: "ID of the cost center."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CostCenter"
    put:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "costCenterID"
        in: "path"
        description: "ID of the cost center."
        required: true
        type: "string"
      - in: "body"
        name: "costCenter"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CostCenter"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CostCenter"
    delete:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "costCenterID"
        in: "path"
        description: "ID of the cost center."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "CostCenter"
    patch:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "costCenterID"
        in: "path"
        description: "ID of the cost center."
        required: true
        type: "string"
      - in: "body"
        name: "costCenter"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CostCenter"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CostCenter"
  /buyers/{buyerID}/costcenters/{costCenterID}/assignments:
    delete:
      tags:
      - "CostCenter"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "costCenterID"
        in: "path"
        description: "ID of the cost center."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "CostCenter"
  /buyers/{buyerID}/creditcards:
    get:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CreditCard"
    post:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "card"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CreditCard"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CreditCard"
  /buyers/{buyerID}/creditcards/assignments:
    get:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "creditCardID"
        in: "query"
        description: "ID of the credit card."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the credit card."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CreditCard"
    post:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "assignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CreditCardAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "CreditCard"
  /buyers/{buyerID}/creditcards/{creditCardID}:
    get:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "creditCardID"
        in: "path"
        description: "ID of the credit card."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CreditCard"
    put:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "creditCardID"
        in: "path"
        description: "ID of the credit card."
        required: true
        type: "string"
      - in: "body"
        name: "card"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CreditCard"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CreditCard"
    delete:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "creditCardID"
        in: "path"
        description: "ID of the credit card."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "CreditCard"
    patch:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "creditCardID"
        in: "path"
        description: "ID of the credit card."
        required: true
        type: "string"
      - in: "body"
        name: "card"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CreditCard"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "CreditCard"
  /buyers/{buyerID}/creditcards/{creditCardID}/assignments:
    delete:
      tags:
      - "CreditCard"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "creditCardID"
        in: "path"
        description: "ID of the credit card."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "CreditCard"
  /buyers/{buyerID}/emailtemplates/{emailTemplateType}:
    get:
      tags:
      - "EmailTemplate"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "emailTemplateType"
        in: "path"
        description: "Email template type of the email template. Possible values:\
          \ OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined,\
          \ OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment,\
          \ InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse,\
          \ CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived,\
          \ ApprovalNotification, EmailLoginVerificationCode."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "EmailTemplate"
    put:
      tags:
      - "EmailTemplate"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "emailTemplateType"
        in: "path"
        description: "Email template type of the email template. Possible values:\
          \ OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined,\
          \ OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment,\
          \ InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse,\
          \ CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived,\
          \ ApprovalNotification, EmailLoginVerificationCode."
        required: true
        type: "string"
      - in: "body"
        name: "emailTemplate"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "EmailTemplate"
    delete:
      tags:
      - "EmailTemplate"
      operationId: "controllers.default_controller.reset_to_default"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "emailTemplateType"
        in: "path"
        description: "Email template type of the email template. Possible values:\
          \ OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined,\
          \ OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment,\
          \ InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse,\
          \ CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived,\
          \ ApprovalNotification, EmailLoginVerificationCode."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "EmailTemplate"
    patch:
      tags:
      - "EmailTemplate"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "emailTemplateType"
        in: "path"
        description: "Email template type of the email template. Possible values:\
          \ OrderSubmittedForApproval, CustomerOrderSubmitted, OrderToApprove, OrderDeclined,\
          \ OrderApproved, PriceRequestSubmitted, CustomerOrderShipped, ProductRequiresAttachment,\
          \ InventoryPointReached, LineItemExceedsInventory, PriceRequestResponse,\
          \ CustomerOrderUpdated, OrderCanceled, PriceRequestCanceled, NewOrderReceived,\
          \ ApprovalNotification, EmailLoginVerificationCode."
        required: true
        type: "string"
      - in: "body"
        name: "emailTemplate"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "EmailTemplate"
  /buyers/{buyerID}/orders:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "order"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
    put:
      tags:
      - "Order"
      operationId: "controllers.default_controller.transfer_temp_user_order"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "tempUserToken"
        in: "query"
        description: "Temp user token of the order."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}:
    get:
      tags:
      - "Order"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
    put:
      tags:
      - "Order"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "order"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
    delete:
      tags:
      - "Order"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Order"
    patch:
      tags:
      - "Order"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "partialOrder"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/approvals:
    get:
      tags:
      - "Order"
      operationId: "controllers.default_controller.list_approvals"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Returns all Approvals associated with the Order."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/approve:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.approve"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "comments"
        in: "query"
        description: "Comments to be saved with the order approval."
        required: false
        type: "string"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/billto:
    put:
      tags:
      - "Order"
      operationId: "controllers.default_controller.set_billing_address"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: "Set the Billing Address of the Order. Appropriate only when\
            \ the address is not to be saved/reused. To use a saved Address (i.e.\
            \ from the Addresses resource), PATCH the Order's BillingAddressID property\
            \ instead."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
    patch:
      tags:
      - "Order"
      operationId: "controllers.default_controller.patch_billing_address"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: "Partially update the Billing Address of the Order. Not allowed\
            \ on unsubmitted Orders where BillingAddressID has been set. In that case,\
            \ use the Addresses resource to update the Saved Address."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/cancel:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.cancel"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/decline:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.decline"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "comments"
        in: "query"
        description: "Comments to be saved with the order denial."
        required: false
        type: "string"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/eligibleapprovers:
    get:
      tags:
      - "Order"
      operationId: "controllers.default_controller.list_eligible_approvers"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Returns all Users who can approve or decline this order (but\
            \ have not done so)."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/lineitems:
    get:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
    post:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "lineItem"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/LineItem"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
  /buyers/{buyerID}/orders/{orderID}/lineitems/{lineItemID}:
    get:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
    put:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      - in: "body"
        name: "lineItem"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/LineItem"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
    delete:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "LineItem"
    patch:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      - in: "body"
        name: "partialLineItem"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/LineItem"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
  /buyers/{buyerID}/orders/{orderID}/lineitems/{lineItemID}/shipto:
    put:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.set_shipping_address"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: "Set the Shipping Address of the Line Item. Appropriate only\
            \ when the Address is not to be saved/reused. To use a Saved Address (i.e.\
            \ from the Addresses resource), PATCH the Line Item's ShippingAddressID\
            \ property instead."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
    patch:
      tags:
      - "LineItem"
      operationId: "controllers.default_controller.patch_shipping_address"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: "Partially update the Shipping Address of the Line Item. Not\
            \ allowed on unsubmitted Line Items where ShippingAddressID has been set.\
            \ In that case, use the Addresses resource to update the Saved Address."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "LineItem"
  /buyers/{buyerID}/orders/{orderID}/payments:
    get:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
    post:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "payment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Payment"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
  /buyers/{buyerID}/orders/{orderID}/payments/{paymentID}:
    get:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
    put:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      - in: "body"
        name: "payment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Payment"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
    delete:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Payment"
    patch:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      - in: "body"
        name: "partialPayment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Payment"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
  /buyers/{buyerID}/orders/{orderID}/payments/{paymentID}/transactions:
    post:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.create_transaction"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      - in: "body"
        name: "transaction"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
  /buyers/{buyerID}/orders/{orderID}/payments/{paymentID}/transactions/{transactionID}:
    put:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.update_transaction"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      - name: "transactionID"
        in: "path"
        description: "ID of the transaction."
        required: true
        type: "string"
      - in: "body"
        name: "transaction"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
    delete:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.delete_transaction"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      - name: "transactionID"
        in: "path"
        description: "ID of the transaction."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Payment"
    patch:
      tags:
      - "Payment"
      operationId: "controllers.default_controller.patch_transaction"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "paymentID"
        in: "path"
        description: "ID of the payment."
        required: true
        type: "string"
      - name: "transactionID"
        in: "path"
        description: "ID of the transaction."
        required: true
        type: "string"
      - in: "body"
        name: "partialTransaction"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Payment"
  /buyers/{buyerID}/orders/{orderID}/promotions:
    get:
      tags:
      - "Order"
      operationId: "controllers.default_controller.list_promotions"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/promotions/{promoCode}:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.add_promotion"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "promoCode"
        in: "path"
        description: "Promo code of the order."
        required: true
        type: "string"
      responses:
        201:
          description: "Add a Promotion to an Order."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
    delete:
      tags:
      - "Order"
      operationId: "controllers.default_controller.remove_promotion"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "promoCode"
        in: "path"
        description: "Promo code of the order."
        required: true
        type: "string"
      responses:
        200:
          description: "Remove Promotion from Order."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/ship:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.ship"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "shipment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Shipment"
      responses:
        201:
          description: "Create a new Shipment containing all Line Items from this\
            \ Order."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/shipto:
    put:
      tags:
      - "Order"
      operationId: "controllers.default_controller.set_shipping_address"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: "Set the Shipping Address of all Line Items on the Order. Appropriate\
            \ only when the address is not to be saved/reused. To use a saved Address\
            \ (i.e. from the Addresses resource), PATCH the Order's ShippingAddressID\
            \ property instead."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
    patch:
      tags:
      - "Order"
      operationId: "controllers.default_controller.patch_shipping_address"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: "Partially update the Shipping Address of all Line Items on\
            \ the Order. Not allowed on unsubmitted orders where ShippingAddressID\
            \ has been set on any Line Items. In that case, use the Addresses resource\
            \ to update the Saved Address."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/orders/{orderID}/submit:
    post:
      tags:
      - "Order"
      operationId: "controllers.default_controller.submit"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /buyers/{buyerID}/shipments:
    get:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "orderID"
        in: "query"
        description: "ID of the order."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
    post:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "shipment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Shipment"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
  /buyers/{buyerID}/shipments/{shipmentID}:
    get:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "shipmentID"
        in: "path"
        description: "ID of the shipment."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
    put:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "shipmentID"
        in: "path"
        description: "ID of the shipment."
        required: true
        type: "string"
      - in: "body"
        name: "shipment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Shipment"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
    delete:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "shipmentID"
        in: "path"
        description: "ID of the shipment."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Shipment"
    patch:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "shipmentID"
        in: "path"
        description: "ID of the shipment."
        required: true
        type: "string"
      - in: "body"
        name: "shipment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Shipment"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
  /buyers/{buyerID}/shipments/{shipmentID}/items:
    post:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.save_item"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "shipmentID"
        in: "path"
        description: "ID of the shipment."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ShipmentItem"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
  /buyers/{buyerID}/shipments/{shipmentID}/items/{orderID}/{lineItemID}:
    delete:
      tags:
      - "Shipment"
      operationId: "controllers.default_controller.delete_item"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "shipmentID"
        in: "path"
        description: "ID of the shipment."
        required: true
        type: "string"
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      - name: "lineItemID"
        in: "path"
        description: "ID of the line item."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Shipment"
  /buyers/{buyerID}/spendingaccounts:
    get:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SpendingAccount"
    post:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "spendingAccount"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpendingAccount"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SpendingAccount"
  /buyers/{buyerID}/spendingaccounts/assignments:
    get:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "spendingAccountID"
        in: "query"
        description: "ID of the spending account."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the spending account."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SpendingAccount"
    post:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "assignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpendingAccountAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "SpendingAccount"
  /buyers/{buyerID}/spendingaccounts/{spendingAccountID}:
    get:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "spendingAccountID"
        in: "path"
        description: "ID of the spending account."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SpendingAccount"
    put:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "spendingAccountID"
        in: "path"
        description: "ID of the spending account."
        required: true
        type: "string"
      - in: "body"
        name: "spendingAccount"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpendingAccount"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SpendingAccount"
    delete:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "spendingAccountID"
        in: "path"
        description: "ID of the spending account."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "SpendingAccount"
    patch:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "spendingAccountID"
        in: "path"
        description: "ID of the spending account."
        required: true
        type: "string"
      - in: "body"
        name: "spendingAccount"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpendingAccount"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "SpendingAccount"
  /buyers/{buyerID}/spendingaccounts/{spendingAccountID}/assignments:
    delete:
      tags:
      - "SpendingAccount"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "spendingAccountID"
        in: "path"
        description: "ID of the spending account."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "SpendingAccount"
  /buyers/{buyerID}/usergroups:
    get:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "UserGroup"
    post:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "group"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/UserGroup"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "UserGroup"
  /buyers/{buyerID}/usergroups/assignments:
    get:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.list_user_assignments"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "UserGroup"
    post:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.save_user_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "userGroupAssignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/UserGroupAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "UserGroup"
  /buyers/{buyerID}/usergroups/{userGroupID}:
    get:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "path"
        description: "ID of the user group."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "UserGroup"
    put:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "path"
        description: "ID of the user group."
        required: true
        type: "string"
      - in: "body"
        name: "group"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/UserGroup"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "UserGroup"
    delete:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "path"
        description: "ID of the user group."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "UserGroup"
    patch:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "path"
        description: "ID of the user group."
        required: true
        type: "string"
      - in: "body"
        name: "group"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/UserGroup"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "UserGroup"
  /buyers/{buyerID}/usergroups/{userGroupID}/assignments/{userID}:
    delete:
      tags:
      - "UserGroup"
      operationId: "controllers.default_controller.delete_user_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "path"
        description: "ID of the user group."
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "UserGroup"
  /buyers/{buyerID}/users:
    get:
      tags:
      - "User"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "User"
    post:
      tags:
      - "User"
      operationId: "controllers.default_controller.create"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "User"
  /buyers/{buyerID}/users/{userID}:
    get:
      tags:
      - "User"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "User"
    put:
      tags:
      - "User"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "User"
    delete:
      tags:
      - "User"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "User"
    patch:
      tags:
      - "User"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "User"
  /buyers/{buyerID}/users/{userID}/accesstoken:
    post:
      tags:
      - "User"
      operationId: "controllers.default_controller.get_access_token"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "ID of the user."
        required: true
        type: "string"
      - in: "body"
        name: "tokenRequest"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ImpersonateTokenRequest"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "User"
  /files:
    get:
      tags:
      - "File"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "File"
    post:
      tags:
      - "File"
      operationId: "controllers.default_controller.post_file_data"
      parameters:
      - name: "filename"
        in: "query"
        description: "Filename of the file."
        required: false
        type: "string"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "File"
  /files/{fileID}:
    get:
      tags:
      - "File"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "fileID"
        in: "path"
        description: "ID of the file."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "File"
  /me:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get"
      parameters: []
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    put:
      tags:
      - "Me"
      operationId: "controllers.default_controller.update"
      parameters:
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    patch:
      tags:
      - "Me"
      operationId: "controllers.default_controller.patch"
      parameters:
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/addresses:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_addresses"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    post:
      tags:
      - "Me"
      operationId: "controllers.default_controller.create_address"
      parameters:
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BuyerAddress"
      responses:
        201:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/addresses/{addressID}:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get_address"
      parameters:
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    put:
      tags:
      - "Me"
      operationId: "controllers.default_controller.update_address"
      parameters:
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BuyerAddress"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    delete:
      tags:
      - "Me"
      operationId: "controllers.default_controller.delete_address"
      parameters:
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      responses:
        204:
          description: "Only available to Buyer Users."
      x-tags:
      - tag: "Me"
    patch:
      tags:
      - "Me"
      operationId: "controllers.default_controller.patch_address"
      parameters:
      - name: "addressID"
        in: "path"
        description: "ID of the address."
        required: true
        type: "string"
      - in: "body"
        name: "address"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BuyerAddress"
      responses:
        204:
          description: "Only available to Buyer Users."
      x-tags:
      - tag: "Me"
  /me/categories:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_categories"
      parameters:
      - name: "depth"
        in: "query"
        description: "Depth of the category."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/categories/{parentID}/categories:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_subcategories"
      parameters:
      - name: "parentID"
        in: "path"
        description: "ID of the parent."
        required: true
        type: "string"
      - name: "depth"
        in: "query"
        description: "Depth of the category."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/costcenters:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_cost_centers"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/creditcards:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_credit_cards"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    post:
      tags:
      - "Me"
      operationId: "controllers.default_controller.create_credit_card"
      parameters:
      - in: "body"
        name: "creditCard"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BuyerCreditCard"
      responses:
        201:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/creditcards/{creditcardID}:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get_credit_card"
      parameters:
      - name: "creditcardID"
        in: "path"
        description: "ID of the creditcard."
        required: true
        type: "string"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    put:
      tags:
      - "Me"
      operationId: "controllers.default_controller.update_credit_card"
      parameters:
      - name: "creditcardID"
        in: "path"
        description: "ID of the creditcard."
        required: true
        type: "string"
      - in: "body"
        name: "creditCard"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BuyerCreditCard"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
    delete:
      tags:
      - "Me"
      operationId: "controllers.default_controller.delete_credit_card"
      parameters:
      - name: "creditcardID"
        in: "path"
        description: "ID of the creditcard."
        required: true
        type: "string"
      responses:
        204:
          description: "Only available to Buyer Users."
      x-tags:
      - tag: "Me"
    patch:
      tags:
      - "Me"
      operationId: "controllers.default_controller.patch_credit_card"
      parameters:
      - name: "creditcardID"
        in: "path"
        description: "ID of the creditcard."
        required: true
        type: "string"
      - in: "body"
        name: "creditCard"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BuyerCreditCard"
      responses:
        204:
          description: "Only available to Buyer Users."
      x-tags:
      - tag: "Me"
  /me/orders/incoming:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_incoming_orders"
      parameters:
      - name: "from"
        in: "query"
        description: "Lower bound of date range that the order was created (if outgoing)\
          \ or submitted (if incoming)."
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: "Upper bound of date range that the order was created (if outgoing)\
          \ or submitted (if incoming)."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/orders/outgoing:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_outgoing_orders"
      parameters:
      - name: "from"
        in: "query"
        description: "Lower bound of date range that the order was created (if outgoing)\
          \ or submitted (if incoming)."
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: "Upper bound of date range that the order was created (if outgoing)\
          \ or submitted (if incoming)."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/orders/{orderID}:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get_order"
      parameters:
      - name: "orderID"
        in: "path"
        description: "ID of the order."
        required: true
        type: "string"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/products:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_products"
      parameters:
      - name: "categoryID"
        in: "query"
        description: "ID of the category."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/products/{productID}:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get_product"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/products/{productID}/specs:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_specs"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/products/{productID}/specs/{specID}:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get_spec"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/promotions:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_promotions"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/promotions/{promotionID}:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.get_promotion"
      parameters:
      - name: "promotionID"
        in: "path"
        description: "ID of the promotion."
        required: true
        type: "string"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /me/usergroups:
    get:
      tags:
      - "Me"
      operationId: "controllers.default_controller.list_user_groups"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Only available to Buyer Users."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Me"
  /orders/incoming:
    get:
      tags:
      - "Order"
      operationId: "controllers.default_controller.list_incoming"
      parameters:
      - name: "buyerID"
        in: "query"
        description: "ID of the buyer."
        required: false
        type: "string"
      - name: "from"
        in: "query"
        description: "Lower bound of date range that the order was submitted."
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: "Upper bound of date range that the order was submitted."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /orders/outgoing:
    get:
      tags:
      - "Order"
      operationId: "controllers.default_controller.list_outgoing"
      parameters:
      - name: "buyerID"
        in: "query"
        description: "ID of the buyer."
        required: false
        type: "string"
      - name: "from"
        in: "query"
        description: "Lower bound of date range that the order was created."
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: "Upper bound of date range that the order was created."
        required: false
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Order"
  /password/reset:
    post:
      tags:
      - "PasswordReset"
      operationId: "controllers.default_controller.send_verification_code"
      parameters:
      - in: "body"
        name: "passwordResetRequest"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PasswordResetRequest"
      responses:
        204:
          description: "Sends a temporary verification code via email, which must\
            \ subsequently be passed in a Reset Password call."
      x-tags:
      - tag: "PasswordReset"
  /password/reset/{verificationCode}:
    put:
      tags:
      - "PasswordReset"
      operationId: "controllers.default_controller.reset_password"
      parameters:
      - name: "verificationCode"
        in: "path"
        description: "Verification code of the forgotten password."
        required: true
        type: "string"
      - in: "body"
        name: "passwordReset"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PasswordReset"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "PasswordReset"
  /priceschedules:
    get:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "PriceSchedule"
    post:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.create"
      parameters:
      - in: "body"
        name: "priceSchedule"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PriceSchedule"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "PriceSchedule"
  /priceschedules/{priceScheduleID}:
    get:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "priceScheduleID"
        in: "path"
        description: "ID of the price schedule."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "PriceSchedule"
    put:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "priceScheduleID"
        in: "path"
        description: "ID of the price schedule."
        required: true
        type: "string"
      - in: "body"
        name: "priceSchedule"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PriceSchedule"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "PriceSchedule"
    delete:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "priceScheduleID"
        in: "path"
        description: "ID of the price schedule."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "PriceSchedule"
    patch:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "priceScheduleID"
        in: "path"
        description: "ID of the price schedule."
        required: true
        type: "string"
      - in: "body"
        name: "priceSchedule"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PriceSchedule"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "PriceSchedule"
  /priceschedules/{priceScheduleID}/PriceBreaks:
    post:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.save_price_break"
      parameters:
      - name: "priceScheduleID"
        in: "path"
        description: "ID of the price schedule."
        required: true
        type: "string"
      - in: "body"
        name: "priceBreak"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PriceBreak"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "PriceSchedule"
    delete:
      tags:
      - "PriceSchedule"
      operationId: "controllers.default_controller.delete_price_break"
      parameters:
      - name: "priceScheduleID"
        in: "path"
        description: "ID of the price schedule."
        required: true
        type: "string"
      - name: "quantity"
        in: "query"
        description: "Quantity of the price schedule."
        required: true
        type: "integer"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "PriceSchedule"
  /products:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
    post:
      tags:
      - "Product"
      operationId: "controllers.default_controller.create"
      parameters:
      - in: "body"
        name: "product"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/assignments:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "productID"
        in: "query"
        description: "ID of the product."
        required: false
        type: "string"
      - name: "buyerID"
        in: "query"
        description: "ID of the buyer."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the product."
        required: false
        type: "string"
      - name: "priceScheduleID"
        in: "query"
        description: "ID of the price schedule."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
    post:
      tags:
      - "Product"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - in: "body"
        name: "productAssignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ProductAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Product"
  /products/inventory:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.list_inventory"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
    put:
      tags:
      - "Product"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - in: "body"
        name: "product"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
    delete:
      tags:
      - "Product"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Product"
    patch:
      tags:
      - "Product"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - in: "body"
        name: "product"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Product"
  /products/{productID}/assignments/{buyerID}:
    delete:
      tags:
      - "Product"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "buyerID"
        in: "path"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: "As price schedules aren't assigned to a party without their\
            \ accompanying product, you don't use Delete Assignment to delete a price\
            \ schedule. If you need to remove a price schedule assignment, update\
            \ the assignment to have the price schedule ID as a null. "
      x-tags:
      - tag: "Product"
  /products/{productID}/inventory:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.get_inventory"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      responses:
        200:
          description: "Getting the Inventory on an Inventory-enabled product returns\
            \ two things: the Avalible inventory, and the Reserved inventory. When\
            \ an Order includes a product on the a lineitem, the total amount of that\
            \ product is reserved. When that Order is submitted, the products previously\
            \ reserved for that order are removed from the total inventory and the\
            \ reserved ammount."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/inventory/{inventory}:
    put:
      tags:
      - "Product"
      operationId: "controllers.default_controller.update_inventory"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "inventory"
        in: "path"
        description: "Inventory of the product."
        required: true
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/variants:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.list_variants"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/variants/generate:
    post:
      tags:
      - "Product"
      operationId: "controllers.default_controller.generate_variants"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "overwriteExisting"
        in: "query"
        description: "Overwrite existing of the product."
        required: false
        type: "boolean"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/variants/inventory:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.list_variant_inventory"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: "Listing the Variant Inventory will return a list of all variants\
            \ under a specific product and each variant's available and reserved inventory."
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/variants/inventory/{variantID}:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.get_variant_inventory"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "variantID"
        in: "path"
        description: "ID of the variant."
        required: true
        type: "string"
      responses:
        200:
          description: "Getting the Variant Inventory will return the Name, Available\
            \ Inventory and Reserved Inventory for a specific product variant based\
            \ on the ProductID and VariantID specified. "
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/variants/inventory/{variantID}/{inventory}:
    put:
      tags:
      - "Product"
      operationId: "controllers.default_controller.update_variant_inventory"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "variantID"
        in: "path"
        description: "ID of the variant."
        required: true
        type: "string"
      - name: "inventory"
        in: "path"
        description: "Inventory of the product."
        required: true
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /products/{productID}/variants/{variantID}:
    get:
      tags:
      - "Product"
      operationId: "controllers.default_controller.get_variant"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "variantID"
        in: "path"
        description: "ID of the variant."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
    put:
      tags:
      - "Product"
      operationId: "controllers.default_controller.update_variant"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "variantID"
        in: "path"
        description: "ID of the variant."
        required: true
        type: "string"
      - in: "body"
        name: "variant"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Variant"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
    patch:
      tags:
      - "Product"
      operationId: "controllers.default_controller.patch_variant"
      parameters:
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      - name: "variantID"
        in: "path"
        description: "ID of the variant."
        required: true
        type: "string"
      - in: "body"
        name: "variant"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Variant"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Product"
  /promotions:
    get:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Promotion"
    post:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.create"
      parameters:
      - in: "body"
        name: "promo"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Promotion"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Promotion"
  /promotions/assignments:
    get:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.list_assignments"
      parameters:
      - name: "buyerID"
        in: "query"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "promotionID"
        in: "query"
        description: "ID of the promotion."
        required: false
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      - name: "level"
        in: "query"
        description: "Level of the promotion."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Promotion"
    post:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.save_assignment"
      parameters:
      - in: "body"
        name: "assignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/PromotionAssignment"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Promotion"
  /promotions/{promotionID}:
    get:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "promotionID"
        in: "path"
        description: "ID of the promotion."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Promotion"
    put:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "promotionID"
        in: "path"
        description: "ID of the promotion."
        required: true
        type: "string"
      - in: "body"
        name: "promo"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Promotion"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Promotion"
    delete:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "promotionID"
        in: "path"
        description: "ID of the promotion."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Promotion"
    patch:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "promotionID"
        in: "path"
        description: "ID of the promotion."
        required: true
        type: "string"
      - in: "body"
        name: "partialPromotion"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Promotion"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Promotion"
  /promotions/{promotionID}/assignments:
    delete:
      tags:
      - "Promotion"
      operationId: "controllers.default_controller.delete_assignment"
      parameters:
      - name: "promotionID"
        in: "path"
        description: "ID of the promotion."
        required: true
        type: "string"
      - name: "buyerID"
        in: "query"
        description: "ID of the buyer."
        required: true
        type: "string"
      - name: "userID"
        in: "query"
        description: "ID of the user."
        required: false
        type: "string"
      - name: "userGroupID"
        in: "query"
        description: "ID of the user group."
        required: false
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Promotion"
  /specs:
    get:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.list"
      parameters:
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    post:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.create"
      parameters:
      - in: "body"
        name: "spec"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Spec"
      responses:
        201:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
  /specs/productassignments:
    get:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.list_product_assignments"
      parameters:
      - name: "specID"
        in: "query"
        description: "ID of the spec."
        required: false
        type: "string"
      - name: "productID"
        in: "query"
        description: "ID of the product."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    post:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.save_product_assignment"
      parameters:
      - in: "body"
        name: "productAssignment"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpecProductAssignment"
      responses:
        204:
          description: "While DefinesVariant is an optional parameter, if it is set\
            \ to 'False', generating product variants will not generate variants with\
            \ that spec. This is useful for things like custom logos, where you don't\
            \ want a defined variant product for each logo, but you do want to capture\
            \ a product customization."
      x-tags:
      - tag: "Spec"
  /specs/{specID}:
    get:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.get"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    put:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.update"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - in: "body"
        name: "spec"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Spec"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    delete:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.delete"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Spec"
    patch:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.patch"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - in: "body"
        name: "spec"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Spec"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
  /specs/{specID}/options:
    get:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.list_options"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - name: "search"
        in: "query"
        description: "Word or phrase to search for."
        required: false
        type: "string"
      - name: "searchOn"
        in: "query"
        description: "Comma-delimited list of fields to search on."
        required: false
        type: "string"
      - name: "sortBy"
        in: "query"
        description: "Comma-delimited list of fields to sort by."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page of results to return. Default: 1"
        required: false
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "Number of results to return per page. Default: 20, max: 100."
        required: false
        type: "integer"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    post:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.create_option"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - in: "body"
        name: "option"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpecOption"
      responses:
        201:
          description: "A Spec can have multiple Options-- for example, if the spec\
            \ is called 'Color', the options might be 'Blue', 'Red', and 'Green'. "
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
  /specs/{specID}/options/{optionID}:
    get:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.get_option"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - name: "optionID"
        in: "path"
        description: "ID of the option."
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    put:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.update_option"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - name: "optionID"
        in: "path"
        description: "ID of the option."
        required: true
        type: "string"
      - in: "body"
        name: "option"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpecOption"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
    delete:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.delete_option"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - name: "optionID"
        in: "path"
        description: "ID of the option."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Spec"
    patch:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.patch_option"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - name: "optionID"
        in: "path"
        description: "ID of the option."
        required: true
        type: "string"
      - in: "body"
        name: "option"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/SpecOption"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties: {}
      x-tags:
      - tag: "Spec"
  /specs/{specID}/productassignments/{productID}:
    delete:
      tags:
      - "Spec"
      operationId: "controllers.default_controller.delete_product_assignment"
      parameters:
      - name: "specID"
        in: "path"
        description: "ID of the spec."
        required: true
        type: "string"
      - name: "productID"
        in: "path"
        description: "ID of the product."
        required: true
        type: "string"
      responses:
        204:
          description: ""
      x-tags:
      - tag: "Spec"
securityDefinitions:
  auth:
    type: "oauth2"
    tokenUrl: "https://auth.ordercloud.io/oauth/token"
    flow: "password"
    scopes:
      FullAccess: "Full access of the security profile."
      ProductAdmin: "Product admin of the security profile."
      ProductReader: "Product reader of the security profile."
      InventoryAdmin: "Inventory admin of the security profile."
      ProductAssignmentAdmin: "Product assignment admin of the security profile."
      BuyerAdmin: "Buyer admin of the security profile."
      BuyerReader: "Buyer reader of the security profile."
      CategoryAdmin: "Category admin of the security profile."
      CategoryReader: "Category reader of the security profile."
      AddressAdmin: "Address admin of the security profile."
      AddressReader: "Address reader of the security profile."
      CostCenterAdmin: "Cost center admin of the security profile."
      CostCenterReader: "Cost center reader of the security profile."
      PromotionAdmin: "Promotion admin of the security profile."
      PromotionReader: "Promotion reader of the security profile."
      CreditCardAdmin: "Credit card admin of the security profile."
      CreditCardReader: "Credit card reader of the security profile."
      EmailTemplateAdmin: "Email template admin of the security profile."
      EmailTemplateReader: "Email template reader of the security profile."
      PriceScheduleAdmin: "Price schedule admin of the security profile."
      PriceScheduleReader: "Price schedule reader of the security profile."
      SpendingAccountAdmin: "Spending account admin of the security profile."
      SpendingAccountReader: "Spending account reader of the security profile."
      BuyerUserAdmin: "Buyer user admin of the security profile."
      BuyerUserReader: "Buyer user reader of the security profile."
      UserGroupAdmin: "User group admin of the security profile."
      UserGroupReader: "User group reader of the security profile."
      ApprovalRuleAdmin: "Approval rule admin of the security profile."
      ApprovalRuleReader: "Approval rule reader of the security profile."
      PermissionAdmin: "Permission admin of the security profile."
      OrderAdmin: "Order admin of the security profile."
      OrderReader: "Order reader of the security profile."
      UnsubmittedOrderReader: "Unsubmitted order reader of the security profile."
      MeAdmin: "Me admin of the security profile."
      MeXpAdmin: "Me xp admin of the security profile."
      MeAddressAdmin: "Me address admin of the security profile."
      MeCreditCardAdmin: "Me credit card admin of the security profile."
      OverrideUnitPrice: "Override unit price of the security profile."
      OverrideShipping: "Override shipping of the security profile."
      OverrideTax: "Override tax of the security profile."
definitions:
  PasswordResetRequest:
    type: "object"
    properties:
      ClientID:
        type: "string"
      Email:
        type: "string"
      Username:
        type: "string"
      URL:
        type: "string"
  PasswordReset:
    type: "object"
    properties:
      ClientID:
        type: "string"
      Username:
        type: "string"
      Password:
        type: "string"
  User:
    type: "object"
    properties:
      ID:
        type: "string"
      Username:
        type: "string"
      Password:
        type: "string"
      FirstName:
        type: "string"
      LastName:
        type: "string"
      Email:
        type: "string"
      Phone:
        type: "string"
      TermsAccepted:
        type: "string"
        format: "date"
      Active:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
      SecurityProfileID:
        type: "string"
  Partial`1:
    type: "object"
    properties:
      ID:
        type: "string"
      Username:
        type: "string"
      Password:
        type: "string"
      FirstName:
        type: "string"
      LastName:
        type: "string"
      Email:
        type: "string"
      Phone:
        type: "string"
      TermsAccepted:
        type: "string"
        format: "date"
      Active:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
      SecurityProfileID:
        type: "string"
  BuyerAddress:
    type: "object"
    properties:
      Shipping:
        type: "boolean"
      Billing:
        type: "boolean"
      CompanyName:
        type: "string"
      FirstName:
        type: "string"
      LastName:
        type: "string"
      Street1:
        type: "string"
      Street2:
        type: "string"
      City:
        type: "string"
      State:
        type: "string"
      Zip:
        type: "string"
      Country:
        type: "string"
      Phone:
        type: "string"
      AddressName:
        type: "string"
      xp:
        type: "object"
        properties: {}
  BuyerCreditCard:
    type: "object"
    properties:
      Token:
        type: "string"
      CardType:
        type: "string"
      PartialAccountNumber:
        type: "string"
      CardholderName:
        type: "string"
      ExpirationDate:
        type: "string"
        format: "date"
      xp:
        type: "object"
        properties: {}
  Order:
    type: "object"
    properties:
      ID:
        type: "string"
      Type:
        type: "string"
      FromUserID:
        type: "string"
      BillingAddressID:
        type: "string"
      ShippingAddressID:
        type: "string"
      Comments:
        type: "string"
      ShippingCost:
        type: "number"
      TaxCost:
        type: "number"
      xp:
        type: "object"
        properties: {}
  Shipment:
    type: "object"
    properties:
      ID:
        type: "string"
      Shipper:
        type: "string"
      DateShipped:
        type: "string"
        format: "date"
      TrackingNumber:
        type: "string"
      Cost:
        type: "number"
      Items:
        type: "array"
        items:
          $ref: "#/definitions/ShipmentItem"
      xp:
        type: "object"
        properties: {}
  Address:
    type: "object"
    properties:
      ID:
        type: "string"
      CompanyName:
        type: "string"
      FirstName:
        type: "string"
      LastName:
        type: "string"
      Street1:
        type: "string"
      Street2:
        type: "string"
      City:
        type: "string"
      State:
        type: "string"
      Zip:
        type: "string"
      Country:
        type: "string"
      Phone:
        type: "string"
      AddressName:
        type: "string"
      xp:
        type: "object"
        properties: {}
  LineItem:
    type: "object"
    properties:
      ID:
        type: "string"
      ProductID:
        type: "string"
      Quantity:
        type: "integer"
      UnitPrice:
        type: "number"
      CostCenter:
        type: "string"
      DateNeeded:
        type: "string"
        format: "date"
      ShippingAccount:
        type: "string"
      ShippingAddressID:
        type: "string"
      ShipfromAddressID:
        type: "string"
      ShipperID:
        type: "string"
      Specs:
        type: "array"
        items:
          $ref: "#/definitions/ShipmentItem"
      xp:
        type: "object"
        properties: {}
  Payment:
    type: "object"
    properties:
      ID:
        type: "string"
      Type:
        type: "string"
      CreditCardID:
        type: "string"
      SpendingAccountID:
        type: "string"
      Description:
        type: "string"
      Amount:
        type: "number"
      xp:
        type: "object"
        properties: {}
  PaymentTransaction:
    type: "object"
    properties:
      ID:
        type: "string"
      Type:
        type: "string"
      DateExecuted:
        type: "string"
        format: "date"
      Amount:
        type: "number"
      Succeeded:
        type: "boolean"
      ResultCode:
        type: "string"
      ResultMessage:
        type: "string"
      xp:
        type: "object"
        properties: {}
  ShipmentItem:
    type: "object"
    properties:
      OrderID:
        type: "string"
      LineItemID:
        type: "string"
      QuantityShipped:
        type: "integer"
  Buyer:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Active:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
  Product:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Description:
        type: "string"
      QuantityMultiplier:
        type: "integer"
      ShipWeight:
        type: "number"
      Active:
        type: "boolean"
      Type:
        type: "string"
      InventoryEnabled:
        type: "boolean"
      InventoryNotificationPoint:
        type: "integer"
      VariantLevelInventory:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
      AllowOrderExceedInventory:
        type: "boolean"
      InventoryVisible:
        type: "boolean"
  Variant:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Description:
        type: "string"
      Active:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
  ProductAssignment:
    type: "object"
    properties:
      ProductID:
        type: "string"
      StandardPriceScheduleID:
        type: "string"
      ReplenishmentPriceScheduleID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
      BuyerID:
        type: "string"
  PriceSchedule:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      ApplyTax:
        type: "boolean"
      ApplyShipping:
        type: "boolean"
      MaxQuantity:
        type: "integer"
      UseCumulativeQuantity:
        type: "boolean"
      RestrictedQuantity:
        type: "boolean"
      OrderType:
        type: "string"
      PriceBreaks:
        type: "array"
        items:
          $ref: "#/definitions/ShipmentItem"
      xp:
        type: "object"
        properties: {}
  PriceBreak:
    type: "object"
    properties:
      Quantity:
        type: "integer"
      Price:
        type: "number"
  Spec:
    type: "object"
    properties:
      ID:
        type: "string"
      ListOrder:
        type: "integer"
      Name:
        type: "string"
      DefaultValue:
        type: "string"
      Required:
        type: "boolean"
      AllowOpenText:
        type: "boolean"
      DefaultOptionID:
        type: "string"
      xp:
        type: "object"
        properties: {}
  SpecProductAssignment:
    type: "object"
    properties:
      SpecID:
        type: "string"
      ProductID:
        type: "string"
      DefinesVariant:
        type: "boolean"
  SpecOption:
    type: "object"
    properties:
      ID:
        type: "string"
      Value:
        type: "string"
      ListOrder:
        type: "integer"
      IsOpenText:
        type: "boolean"
      PriceMarkupType:
        type: "string"
      PriceMarkup:
        type: "number"
      xp:
        type: "object"
        properties: {}
  Promotion:
    type: "object"
    properties:
      ID:
        type: "string"
      Code:
        type: "string"
      Name:
        type: "string"
      UsagesRemaining:
        type: "integer"
      Description:
        type: "string"
      FinePrint:
        type: "string"
      StartDate:
        type: "string"
        format: "date"
      ExpirationDate:
        type: "string"
        format: "date"
      EligibleExpression:
        type: "string"
      ValueExpression:
        type: "string"
      CanCombine:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
  PromotionAssignment:
    type: "object"
    properties:
      PromotionID:
        type: "string"
      BuyerID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
  ImpersonateTokenRequest:
    type: "object"
    properties:
      ClientID:
        type: "string"
      Claims:
        type: "array"
        items:
          $ref: "#/definitions/ShipmentItem"
  UserGroup:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Description:
        type: "string"
      xp:
        type: "object"
        properties: {}
  UserGroupAssignment:
    type: "object"
    properties:
      UserGroupID:
        type: "string"
      UserID:
        type: "string"
  Category:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Description:
        type: "string"
      xp:
        type: "object"
        properties: {}
      ListOrder:
        type: "integer"
      Active:
        type: "boolean"
      ParentID:
        type: "string"
  CategoryProductAssignment:
    type: "object"
    properties:
      CategoryID:
        type: "string"
      ProductID:
        type: "string"
      ListOrder:
        type: "integer"
  CategoryAssignment:
    type: "object"
    properties:
      CategoryID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
  AddressAssignment:
    type: "object"
    properties:
      AddressID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
      IsShipping:
        type: "boolean"
      IsBilling:
        type: "boolean"
  SpendingAccount:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Balance:
        type: "number"
      AllowAsPaymentMethod:
        type: "boolean"
      RedemptionCode:
        type: "string"
      StartDate:
        type: "string"
        format: "date"
      EndDate:
        type: "string"
        format: "date"
      xp:
        type: "object"
        properties: {}
  SpendingAccountAssignment:
    type: "object"
    properties:
      SpendingAccountID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
      AllowExceed:
        type: "boolean"
  CostCenter:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Description:
        type: "string"
      xp:
        type: "object"
        properties: {}
  CostCenterAssignment:
    type: "object"
    properties:
      CostCenterID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
  ApprovalRule:
    type: "object"
    properties:
      ID:
        type: "string"
      Name:
        type: "string"
      Description:
        type: "string"
      ApprovingGroupID:
        type: "string"
      RuleExpression:
        type: "string"
      Scope:
        type: "string"
      ScopeTimeUnit:
        type: "string"
      ScopeTimeNumber:
        type: "integer"
      ScopeStartDate:
        type: "string"
        format: "date"
      ExpireAfterTimeUnit:
        type: "string"
      ExpireAfterNumber:
        type: "integer"
      ApproveOnExpire:
        type: "boolean"
      xp:
        type: "object"
        properties: {}
  CreditCard:
    type: "object"
    properties:
      ID:
        type: "string"
      Token:
        type: "string"
      CardType:
        type: "string"
      PartialAccountNumber:
        type: "string"
      CardholderName:
        type: "string"
      ExpirationDate:
        type: "string"
        format: "date"
      xp:
        type: "object"
        properties: {}
  CreditCardAssignment:
    type: "object"
    properties:
      CreditCardID:
        type: "string"
      UserID:
        type: "string"
      UserGroupID:
        type: "string"
  EmailTemplate:
    type: "object"
    properties:
      Subject:
        type: "string"
      Body:
        type: "string"
      ReplyEmail:
        type: "string"
      SendMessageType:
        type: "boolean"
      EmailFormatType:
        type: "string"
securityRequirement:
- auth: []
