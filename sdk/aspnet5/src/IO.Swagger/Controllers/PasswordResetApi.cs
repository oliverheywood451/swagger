/*
 * OrderCloud
 *
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using OrderCloud.Models;

namespace OrderCloud.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class PasswordResetApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="verificationCode">Verification code of the forgotten password.</param>
        /// <param name="passwordReset"></param>
        /// <response code="204"></response>
        [HttpPut]
        [Route("/password/reset/{verificationCode}")]
        [SwaggerOperation("ResetPassword")]
        public virtual void ResetPassword([FromRoute]string verificationCode, [FromBody]PasswordReset passwordReset)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="passwordResetRequest"></param>
        /// <response code="204">Sends a temporary verification code via email, which must subsequently be passed in a Reset Password call.</response>
        [HttpPost]
        [Route("/password/reset")]
        [SwaggerOperation("SendVerificationCode")]
        public virtual void SendVerificationCode([FromBody]PasswordResetRequest passwordResetRequest)
        { 
            throw new NotImplementedException();
        }
    }
}
