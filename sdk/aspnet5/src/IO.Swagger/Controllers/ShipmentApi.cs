/*
 * OrderCloud
 *
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using OrderCloud.Models;

namespace OrderCloud.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class ShipmentApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipment"></param>
        /// <response code="201"></response>
        [HttpPost]
        [Route("/buyers/{buyerID}/shipments")]
        [SwaggerOperation("Create")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult Create([FromRoute]string buyerID, [FromBody]Shipment shipment)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipmentID">ID of the shipment.</param>
        /// <response code="204"></response>
        [HttpDelete]
        [Route("/buyers/{buyerID}/shipments/{shipmentID}")]
        [SwaggerOperation("Delete")]
        public virtual void Delete([FromRoute]string buyerID, [FromRoute]string shipmentID)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipmentID">ID of the shipment.</param>
        /// <param name="orderID">ID of the order.</param>
        /// <param name="lineItemID">ID of the line item.</param>
        /// <response code="200"></response>
        [HttpDelete]
        [Route("/buyers/{buyerID}/shipments/{shipmentID}/items/{orderID}/{lineItemID}")]
        [SwaggerOperation("DeleteItem")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult DeleteItem([FromRoute]string buyerID, [FromRoute]string shipmentID, [FromRoute]string orderID, [FromRoute]string lineItemID)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipmentID">ID of the shipment.</param>
        /// <response code="200"></response>
        [HttpGet]
        [Route("/buyers/{buyerID}/shipments/{shipmentID}")]
        [SwaggerOperation("Get")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult Get([FromRoute]string buyerID, [FromRoute]string shipmentID)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="orderID">ID of the order.</param>
        /// <param name="search">Word or phrase to search for.</param>
        /// <param name="searchOn">Comma-delimited list of fields to search on.</param>
        /// <param name="sortBy">Comma-delimited list of fields to sort by.</param>
        /// <param name="page">Page of results to return. Default: 1</param>
        /// <param name="pageSize">Number of results to return per page. Default: 20, max: 100.</param>
        /// <response code="200"></response>
        [HttpGet]
        [Route("/buyers/{buyerID}/shipments")]
        [SwaggerOperation("List")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult List([FromRoute]string buyerID, [FromQuery]string orderID, [FromQuery]string search, [FromQuery]string searchOn, [FromQuery]string sortBy, [FromQuery]int? page, [FromQuery]int? pageSize)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipmentID">ID of the shipment.</param>
        /// <param name="shipment"></param>
        /// <response code="200"></response>
        [HttpPatch]
        [Route("/buyers/{buyerID}/shipments/{shipmentID}")]
        [SwaggerOperation("Patch")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult Patch([FromRoute]string buyerID, [FromRoute]string shipmentID, [FromBody]Shipment shipment)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipmentID">ID of the shipment.</param>
        /// <param name="item"></param>
        /// <response code="201"></response>
        [HttpPost]
        [Route("/buyers/{buyerID}/shipments/{shipmentID}/items")]
        [SwaggerOperation("SaveItem")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult SaveItem([FromRoute]string buyerID, [FromRoute]string shipmentID, [FromBody]ShipmentItem item)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="buyerID">ID of the buyer.</param>
        /// <param name="shipmentID">ID of the shipment.</param>
        /// <param name="shipment"></param>
        /// <response code="200"></response>
        [HttpPut]
        [Route("/buyers/{buyerID}/shipments/{shipmentID}")]
        [SwaggerOperation("Update")]
        [SwaggerResponse(200, type: typeof(Object))]
        public virtual IActionResult Update([FromRoute]string buyerID, [FromRoute]string shipmentID, [FromBody]Shipment shipment)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            return new ObjectResult(example);
        }
    }
}
