/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_


#include "SWGAddress.h"
#include "SWGAddressAssignment.h"
#include "SWGApprovalRule.h"
#include "SWGBuyer.h"
#include "SWGBuyerAddress.h"
#include "SWGBuyerCreditCard.h"
#include "SWGCategory.h"
#include "SWGCategoryAssignment.h"
#include "SWGCategoryProductAssignment.h"
#include "SWGCostCenter.h"
#include "SWGCostCenterAssignment.h"
#include "SWGCreditCard.h"
#include "SWGCreditCardAssignment.h"
#include "SWGEmailTemplate.h"
#include "SWGImpersonateTokenRequest.h"
#include "SWGLineItem.h"
#include "SWGOrder.h"
#include "SWGPartial&#x60;1.h"
#include "SWGPasswordReset.h"
#include "SWGPasswordResetRequest.h"
#include "SWGPayment.h"
#include "SWGPaymentTransaction.h"
#include "SWGPriceBreak.h"
#include "SWGPriceSchedule.h"
#include "SWGProduct.h"
#include "SWGProductAssignment.h"
#include "SWGPromotion.h"
#include "SWGPromotionAssignment.h"
#include "SWGShipment.h"
#include "SWGShipmentItem.h"
#include "SWGSpec.h"
#include "SWGSpecOption.h"
#include "SWGSpecProductAssignment.h"
#include "SWGSpendingAccount.h"
#include "SWGSpendingAccountAssignment.h"
#include "SWGUser.h"
#include "SWGUserGroup.h"
#include "SWGUserGroupAssignment.h"
#include "SWGVariant.h"

namespace Swagger {
  inline void* create(QString type) {
    if(QString("SWGAddress").compare(type) == 0) {
      return new SWGAddress();
    }
    if(QString("SWGAddressAssignment").compare(type) == 0) {
      return new SWGAddressAssignment();
    }
    if(QString("SWGApprovalRule").compare(type) == 0) {
      return new SWGApprovalRule();
    }
    if(QString("SWGBuyer").compare(type) == 0) {
      return new SWGBuyer();
    }
    if(QString("SWGBuyerAddress").compare(type) == 0) {
      return new SWGBuyerAddress();
    }
    if(QString("SWGBuyerCreditCard").compare(type) == 0) {
      return new SWGBuyerCreditCard();
    }
    if(QString("SWGCategory").compare(type) == 0) {
      return new SWGCategory();
    }
    if(QString("SWGCategoryAssignment").compare(type) == 0) {
      return new SWGCategoryAssignment();
    }
    if(QString("SWGCategoryProductAssignment").compare(type) == 0) {
      return new SWGCategoryProductAssignment();
    }
    if(QString("SWGCostCenter").compare(type) == 0) {
      return new SWGCostCenter();
    }
    if(QString("SWGCostCenterAssignment").compare(type) == 0) {
      return new SWGCostCenterAssignment();
    }
    if(QString("SWGCreditCard").compare(type) == 0) {
      return new SWGCreditCard();
    }
    if(QString("SWGCreditCardAssignment").compare(type) == 0) {
      return new SWGCreditCardAssignment();
    }
    if(QString("SWGEmailTemplate").compare(type) == 0) {
      return new SWGEmailTemplate();
    }
    if(QString("SWGImpersonateTokenRequest").compare(type) == 0) {
      return new SWGImpersonateTokenRequest();
    }
    if(QString("SWGLineItem").compare(type) == 0) {
      return new SWGLineItem();
    }
    if(QString("SWGOrder").compare(type) == 0) {
      return new SWGOrder();
    }
    if(QString("SWGPartial&#x60;1").compare(type) == 0) {
      return new SWGPartial&#x60;1();
    }
    if(QString("SWGPasswordReset").compare(type) == 0) {
      return new SWGPasswordReset();
    }
    if(QString("SWGPasswordResetRequest").compare(type) == 0) {
      return new SWGPasswordResetRequest();
    }
    if(QString("SWGPayment").compare(type) == 0) {
      return new SWGPayment();
    }
    if(QString("SWGPaymentTransaction").compare(type) == 0) {
      return new SWGPaymentTransaction();
    }
    if(QString("SWGPriceBreak").compare(type) == 0) {
      return new SWGPriceBreak();
    }
    if(QString("SWGPriceSchedule").compare(type) == 0) {
      return new SWGPriceSchedule();
    }
    if(QString("SWGProduct").compare(type) == 0) {
      return new SWGProduct();
    }
    if(QString("SWGProductAssignment").compare(type) == 0) {
      return new SWGProductAssignment();
    }
    if(QString("SWGPromotion").compare(type) == 0) {
      return new SWGPromotion();
    }
    if(QString("SWGPromotionAssignment").compare(type) == 0) {
      return new SWGPromotionAssignment();
    }
    if(QString("SWGShipment").compare(type) == 0) {
      return new SWGShipment();
    }
    if(QString("SWGShipmentItem").compare(type) == 0) {
      return new SWGShipmentItem();
    }
    if(QString("SWGSpec").compare(type) == 0) {
      return new SWGSpec();
    }
    if(QString("SWGSpecOption").compare(type) == 0) {
      return new SWGSpecOption();
    }
    if(QString("SWGSpecProductAssignment").compare(type) == 0) {
      return new SWGSpecProductAssignment();
    }
    if(QString("SWGSpendingAccount").compare(type) == 0) {
      return new SWGSpendingAccount();
    }
    if(QString("SWGSpendingAccountAssignment").compare(type) == 0) {
      return new SWGSpendingAccountAssignment();
    }
    if(QString("SWGUser").compare(type) == 0) {
      return new SWGUser();
    }
    if(QString("SWGUserGroup").compare(type) == 0) {
      return new SWGUserGroup();
    }
    if(QString("SWGUserGroupAssignment").compare(type) == 0) {
      return new SWGUserGroupAssignment();
    }
    if(QString("SWGVariant").compare(type) == 0) {
      return new SWGVariant();
    }
    
    return NULL;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != NULL) {
      SWGObject* obj = static_cast<SWGObject*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return NULL;
  }
} /* namespace Swagger */

#endif /* ModelFactory_H_ */
