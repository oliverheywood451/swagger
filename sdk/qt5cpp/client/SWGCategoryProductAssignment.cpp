/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGCategoryProductAssignment.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCategoryProductAssignment::SWGCategoryProductAssignment(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCategoryProductAssignment::SWGCategoryProductAssignment() {
    init();
}

SWGCategoryProductAssignment::~SWGCategoryProductAssignment() {
    this->cleanup();
}

void
SWGCategoryProductAssignment::init() {
    CategoryID = new QString("");
ProductID = new QString("");
ListOrder = NULL;
}

void
SWGCategoryProductAssignment::cleanup() {
    if(CategoryID != NULL) {
        delete CategoryID;
    }
if(ProductID != NULL) {
        delete ProductID;
    }

}

SWGCategoryProductAssignment*
SWGCategoryProductAssignment::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCategoryProductAssignment::fromJsonObject(QJsonObject &pJson) {
    setValue(&CategoryID, pJson["CategoryID"], "QString", "QString");
setValue(&ProductID, pJson["ProductID"], "QString", "QString");
setValue(&ListOrder, pJson["ListOrder"], "qint32", "");
}

QString
SWGCategoryProductAssignment::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCategoryProductAssignment::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("CategoryID"), CategoryID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ProductID"), ProductID, obj, QString("QString"));
    
        
obj->insert("ListOrder", QJsonValue(ListOrder));

    return obj;
}

QString*
SWGCategoryProductAssignment::getCategoryID() {
    return CategoryID;
}
void
SWGCategoryProductAssignment::setCategoryID(QString* CategoryID) {
    this->CategoryID = CategoryID;
}

QString*
SWGCategoryProductAssignment::getProductID() {
    return ProductID;
}
void
SWGCategoryProductAssignment::setProductID(QString* ProductID) {
    this->ProductID = ProductID;
}

qint32
SWGCategoryProductAssignment::getListOrder() {
    return ListOrder;
}
void
SWGCategoryProductAssignment::setListOrder(qint32 ListOrder) {
    this->ListOrder = ListOrder;
}



} /* namespace Swagger */

