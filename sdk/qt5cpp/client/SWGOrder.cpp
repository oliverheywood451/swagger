/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGOrder.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGOrder::SWGOrder(QString* json) {
    init();
    this->fromJson(*json);
}

SWGOrder::SWGOrder() {
    init();
}

SWGOrder::~SWGOrder() {
    this->cleanup();
}

void
SWGOrder::init() {
    ID = new QString("");
Type = new QString("");
FromUserID = new QString("");
BillingAddressID = new QString("");
ShippingAddressID = new QString("");
Comments = new QString("");
ShippingCost = 0.0;
TaxCost = 0.0;
xp = NULL;
}

void
SWGOrder::cleanup() {
    if(ID != NULL) {
        delete ID;
    }
if(Type != NULL) {
        delete Type;
    }
if(FromUserID != NULL) {
        delete FromUserID;
    }
if(BillingAddressID != NULL) {
        delete BillingAddressID;
    }
if(ShippingAddressID != NULL) {
        delete ShippingAddressID;
    }
if(Comments != NULL) {
        delete Comments;
    }
if(ShippingCost != NULL) {
        delete ShippingCost;
    }
if(TaxCost != NULL) {
        delete TaxCost;
    }
if(xp != NULL) {
        delete xp;
    }
}

SWGOrder*
SWGOrder::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGOrder::fromJsonObject(QJsonObject &pJson) {
    setValue(&ID, pJson["ID"], "QString", "QString");
setValue(&Type, pJson["Type"], "QString", "QString");
setValue(&FromUserID, pJson["FromUserID"], "QString", "QString");
setValue(&BillingAddressID, pJson["BillingAddressID"], "QString", "QString");
setValue(&ShippingAddressID, pJson["ShippingAddressID"], "QString", "QString");
setValue(&Comments, pJson["Comments"], "QString", "QString");
setValue(&ShippingCost, pJson["ShippingCost"], "SWGNumber", "SWGNumber");
setValue(&TaxCost, pJson["TaxCost"], "SWGNumber", "SWGNumber");
setValue(&xp, pJson["xp"], "SWGObject", "SWGObject");
}

QString
SWGOrder::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGOrder::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("ID"), ID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("Type"), Type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("FromUserID"), FromUserID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("BillingAddressID"), BillingAddressID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ShippingAddressID"), ShippingAddressID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("Comments"), Comments, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ShippingCost"), ShippingCost, obj, QString("SWGNumber"));
    
        

    
    toJsonValue(QString("TaxCost"), TaxCost, obj, QString("SWGNumber"));
    
        

    
    toJsonValue(QString("xp"), xp, obj, QString("SWGObject"));
    
        

    return obj;
}

QString*
SWGOrder::getID() {
    return ID;
}
void
SWGOrder::setID(QString* ID) {
    this->ID = ID;
}

QString*
SWGOrder::getType() {
    return Type;
}
void
SWGOrder::setType(QString* Type) {
    this->Type = Type;
}

QString*
SWGOrder::getFromUserID() {
    return FromUserID;
}
void
SWGOrder::setFromUserID(QString* FromUserID) {
    this->FromUserID = FromUserID;
}

QString*
SWGOrder::getBillingAddressID() {
    return BillingAddressID;
}
void
SWGOrder::setBillingAddressID(QString* BillingAddressID) {
    this->BillingAddressID = BillingAddressID;
}

QString*
SWGOrder::getShippingAddressID() {
    return ShippingAddressID;
}
void
SWGOrder::setShippingAddressID(QString* ShippingAddressID) {
    this->ShippingAddressID = ShippingAddressID;
}

QString*
SWGOrder::getComments() {
    return Comments;
}
void
SWGOrder::setComments(QString* Comments) {
    this->Comments = Comments;
}

SWGNumber*
SWGOrder::getShippingCost() {
    return ShippingCost;
}
void
SWGOrder::setShippingCost(SWGNumber* ShippingCost) {
    this->ShippingCost = ShippingCost;
}

SWGNumber*
SWGOrder::getTaxCost() {
    return TaxCost;
}
void
SWGOrder::setTaxCost(SWGNumber* TaxCost) {
    this->TaxCost = TaxCost;
}

SWGObject*
SWGOrder::getXp() {
    return xp;
}
void
SWGOrder::setXp(SWGObject* xp) {
    this->xp = xp;
}



} /* namespace Swagger */

