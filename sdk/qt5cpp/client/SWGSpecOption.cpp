/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGSpecOption.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSpecOption::SWGSpecOption(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSpecOption::SWGSpecOption() {
    init();
}

SWGSpecOption::~SWGSpecOption() {
    this->cleanup();
}

void
SWGSpecOption::init() {
    ID = new QString("");
Value = new QString("");
ListOrder = NULL;
IsOpenText = false;
PriceMarkupType = new QString("");
PriceMarkup = 0.0;
xp = NULL;
}

void
SWGSpecOption::cleanup() {
    if(ID != NULL) {
        delete ID;
    }
if(Value != NULL) {
        delete Value;
    }


if(PriceMarkupType != NULL) {
        delete PriceMarkupType;
    }
if(PriceMarkup != NULL) {
        delete PriceMarkup;
    }
if(xp != NULL) {
        delete xp;
    }
}

SWGSpecOption*
SWGSpecOption::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSpecOption::fromJsonObject(QJsonObject &pJson) {
    setValue(&ID, pJson["ID"], "QString", "QString");
setValue(&Value, pJson["Value"], "QString", "QString");
setValue(&ListOrder, pJson["ListOrder"], "qint32", "");
setValue(&IsOpenText, pJson["IsOpenText"], "bool", "");
setValue(&PriceMarkupType, pJson["PriceMarkupType"], "QString", "QString");
setValue(&PriceMarkup, pJson["PriceMarkup"], "SWGNumber", "SWGNumber");
setValue(&xp, pJson["xp"], "SWGObject", "SWGObject");
}

QString
SWGSpecOption::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSpecOption::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("ID"), ID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("Value"), Value, obj, QString("QString"));
    
        
obj->insert("ListOrder", QJsonValue(ListOrder));
obj->insert("IsOpenText", QJsonValue(IsOpenText));

    
    toJsonValue(QString("PriceMarkupType"), PriceMarkupType, obj, QString("QString"));
    
        

    
    toJsonValue(QString("PriceMarkup"), PriceMarkup, obj, QString("SWGNumber"));
    
        

    
    toJsonValue(QString("xp"), xp, obj, QString("SWGObject"));
    
        

    return obj;
}

QString*
SWGSpecOption::getID() {
    return ID;
}
void
SWGSpecOption::setID(QString* ID) {
    this->ID = ID;
}

QString*
SWGSpecOption::getValue() {
    return Value;
}
void
SWGSpecOption::setValue(QString* Value) {
    this->Value = Value;
}

qint32
SWGSpecOption::getListOrder() {
    return ListOrder;
}
void
SWGSpecOption::setListOrder(qint32 ListOrder) {
    this->ListOrder = ListOrder;
}

bool
SWGSpecOption::getIsOpenText() {
    return IsOpenText;
}
void
SWGSpecOption::setIsOpenText(bool IsOpenText) {
    this->IsOpenText = IsOpenText;
}

QString*
SWGSpecOption::getPriceMarkupType() {
    return PriceMarkupType;
}
void
SWGSpecOption::setPriceMarkupType(QString* PriceMarkupType) {
    this->PriceMarkupType = PriceMarkupType;
}

SWGNumber*
SWGSpecOption::getPriceMarkup() {
    return PriceMarkup;
}
void
SWGSpecOption::setPriceMarkup(SWGNumber* PriceMarkup) {
    this->PriceMarkup = PriceMarkup;
}

SWGObject*
SWGSpecOption::getXp() {
    return xp;
}
void
SWGSpecOption::setXp(SWGObject* xp) {
    this->xp = xp;
}



} /* namespace Swagger */

