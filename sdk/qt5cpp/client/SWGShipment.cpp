/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGShipment.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGShipment::SWGShipment(QString* json) {
    init();
    this->fromJson(*json);
}

SWGShipment::SWGShipment() {
    init();
}

SWGShipment::~SWGShipment() {
    this->cleanup();
}

void
SWGShipment::init() {
    ID = new QString("");
Shipper = new QString("");
DateShipped = NULL;
TrackingNumber = new QString("");
Cost = 0.0;
Items = new QList<SWGShipmentItem*>();
xp = NULL;
}

void
SWGShipment::cleanup() {
    if(ID != NULL) {
        delete ID;
    }
if(Shipper != NULL) {
        delete Shipper;
    }
if(DateShipped != NULL) {
        delete DateShipped;
    }
if(TrackingNumber != NULL) {
        delete TrackingNumber;
    }
if(Cost != NULL) {
        delete Cost;
    }
if(Items != NULL) {
        QList<SWGShipmentItem*>* arr = Items;
        foreach(SWGShipmentItem* o, *arr) {
            delete o;
        }
        delete Items;
    }
if(xp != NULL) {
        delete xp;
    }
}

SWGShipment*
SWGShipment::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGShipment::fromJsonObject(QJsonObject &pJson) {
    setValue(&ID, pJson["ID"], "QString", "QString");
setValue(&Shipper, pJson["Shipper"], "QString", "QString");
setValue(&DateShipped, pJson["DateShipped"], "QDate", "QDate");
setValue(&TrackingNumber, pJson["TrackingNumber"], "QString", "QString");
setValue(&Cost, pJson["Cost"], "SWGNumber", "SWGNumber");
setValue(&Items, pJson["Items"], "QList", "SWGShipmentItem");
setValue(&xp, pJson["xp"], "SWGObject", "SWGObject");
}

QString
SWGShipment::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGShipment::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("ID"), ID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("Shipper"), Shipper, obj, QString("QString"));
    
        

    
    toJsonValue(QString("DateShipped"), DateShipped, obj, QString("QDate"));
    
        

    
    toJsonValue(QString("TrackingNumber"), TrackingNumber, obj, QString("QString"));
    
        

    
    toJsonValue(QString("Cost"), Cost, obj, QString("SWGNumber"));
    
        

    
    QList<SWGShipmentItem*>* ItemsList = Items;
    QJsonArray ItemsJsonArray;
    toJsonArray((QList<void*>*)Items, &ItemsJsonArray, "Items", "SWGShipmentItem");

    obj->insert("Items", ItemsJsonArray);
    

    
    toJsonValue(QString("xp"), xp, obj, QString("SWGObject"));
    
        

    return obj;
}

QString*
SWGShipment::getID() {
    return ID;
}
void
SWGShipment::setID(QString* ID) {
    this->ID = ID;
}

QString*
SWGShipment::getShipper() {
    return Shipper;
}
void
SWGShipment::setShipper(QString* Shipper) {
    this->Shipper = Shipper;
}

QDate*
SWGShipment::getDateShipped() {
    return DateShipped;
}
void
SWGShipment::setDateShipped(QDate* DateShipped) {
    this->DateShipped = DateShipped;
}

QString*
SWGShipment::getTrackingNumber() {
    return TrackingNumber;
}
void
SWGShipment::setTrackingNumber(QString* TrackingNumber) {
    this->TrackingNumber = TrackingNumber;
}

SWGNumber*
SWGShipment::getCost() {
    return Cost;
}
void
SWGShipment::setCost(SWGNumber* Cost) {
    this->Cost = Cost;
}

QList<SWGShipmentItem*>*
SWGShipment::getItems() {
    return Items;
}
void
SWGShipment::setItems(QList<SWGShipmentItem*>* Items) {
    this->Items = Items;
}

SWGObject*
SWGShipment::getXp() {
    return xp;
}
void
SWGShipment::setXp(SWGObject* xp) {
    this->xp = xp;
}



} /* namespace Swagger */

