/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGImpersonateTokenRequest.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGImpersonateTokenRequest::SWGImpersonateTokenRequest(QString* json) {
    init();
    this->fromJson(*json);
}

SWGImpersonateTokenRequest::SWGImpersonateTokenRequest() {
    init();
}

SWGImpersonateTokenRequest::~SWGImpersonateTokenRequest() {
    this->cleanup();
}

void
SWGImpersonateTokenRequest::init() {
    ClientID = new QString("");
Claims = new QList<SWGShipmentItem*>();
}

void
SWGImpersonateTokenRequest::cleanup() {
    if(ClientID != NULL) {
        delete ClientID;
    }
if(Claims != NULL) {
        QList<SWGShipmentItem*>* arr = Claims;
        foreach(SWGShipmentItem* o, *arr) {
            delete o;
        }
        delete Claims;
    }
}

SWGImpersonateTokenRequest*
SWGImpersonateTokenRequest::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGImpersonateTokenRequest::fromJsonObject(QJsonObject &pJson) {
    setValue(&ClientID, pJson["ClientID"], "QString", "QString");
setValue(&Claims, pJson["Claims"], "QList", "SWGShipmentItem");
}

QString
SWGImpersonateTokenRequest::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGImpersonateTokenRequest::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("ClientID"), ClientID, obj, QString("QString"));
    
        

    
    QList<SWGShipmentItem*>* ClaimsList = Claims;
    QJsonArray ClaimsJsonArray;
    toJsonArray((QList<void*>*)Claims, &ClaimsJsonArray, "Claims", "SWGShipmentItem");

    obj->insert("Claims", ClaimsJsonArray);
    

    return obj;
}

QString*
SWGImpersonateTokenRequest::getClientID() {
    return ClientID;
}
void
SWGImpersonateTokenRequest::setClientID(QString* ClientID) {
    this->ClientID = ClientID;
}

QList<SWGShipmentItem*>*
SWGImpersonateTokenRequest::getClaims() {
    return Claims;
}
void
SWGImpersonateTokenRequest::setClaims(QList<SWGShipmentItem*>* Claims) {
    this->Claims = Claims;
}



} /* namespace Swagger */

