/**
 * OrderCloud
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGLineItem.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGLineItem::SWGLineItem(QString* json) {
    init();
    this->fromJson(*json);
}

SWGLineItem::SWGLineItem() {
    init();
}

SWGLineItem::~SWGLineItem() {
    this->cleanup();
}

void
SWGLineItem::init() {
    ID = new QString("");
ProductID = new QString("");
Quantity = NULL;
UnitPrice = 0.0;
CostCenter = new QString("");
DateNeeded = NULL;
ShippingAccount = new QString("");
ShippingAddressID = new QString("");
ShipfromAddressID = new QString("");
ShipperID = new QString("");
Specs = new QList<SWGShipmentItem*>();
xp = NULL;
}

void
SWGLineItem::cleanup() {
    if(ID != NULL) {
        delete ID;
    }
if(ProductID != NULL) {
        delete ProductID;
    }

if(UnitPrice != NULL) {
        delete UnitPrice;
    }
if(CostCenter != NULL) {
        delete CostCenter;
    }
if(DateNeeded != NULL) {
        delete DateNeeded;
    }
if(ShippingAccount != NULL) {
        delete ShippingAccount;
    }
if(ShippingAddressID != NULL) {
        delete ShippingAddressID;
    }
if(ShipfromAddressID != NULL) {
        delete ShipfromAddressID;
    }
if(ShipperID != NULL) {
        delete ShipperID;
    }
if(Specs != NULL) {
        QList<SWGShipmentItem*>* arr = Specs;
        foreach(SWGShipmentItem* o, *arr) {
            delete o;
        }
        delete Specs;
    }
if(xp != NULL) {
        delete xp;
    }
}

SWGLineItem*
SWGLineItem::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGLineItem::fromJsonObject(QJsonObject &pJson) {
    setValue(&ID, pJson["ID"], "QString", "QString");
setValue(&ProductID, pJson["ProductID"], "QString", "QString");
setValue(&Quantity, pJson["Quantity"], "qint32", "");
setValue(&UnitPrice, pJson["UnitPrice"], "SWGNumber", "SWGNumber");
setValue(&CostCenter, pJson["CostCenter"], "QString", "QString");
setValue(&DateNeeded, pJson["DateNeeded"], "QDate", "QDate");
setValue(&ShippingAccount, pJson["ShippingAccount"], "QString", "QString");
setValue(&ShippingAddressID, pJson["ShippingAddressID"], "QString", "QString");
setValue(&ShipfromAddressID, pJson["ShipfromAddressID"], "QString", "QString");
setValue(&ShipperID, pJson["ShipperID"], "QString", "QString");
setValue(&Specs, pJson["Specs"], "QList", "SWGShipmentItem");
setValue(&xp, pJson["xp"], "SWGObject", "SWGObject");
}

QString
SWGLineItem::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGLineItem::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("ID"), ID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ProductID"), ProductID, obj, QString("QString"));
    
        
obj->insert("Quantity", QJsonValue(Quantity));

    
    toJsonValue(QString("UnitPrice"), UnitPrice, obj, QString("SWGNumber"));
    
        

    
    toJsonValue(QString("CostCenter"), CostCenter, obj, QString("QString"));
    
        

    
    toJsonValue(QString("DateNeeded"), DateNeeded, obj, QString("QDate"));
    
        

    
    toJsonValue(QString("ShippingAccount"), ShippingAccount, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ShippingAddressID"), ShippingAddressID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ShipfromAddressID"), ShipfromAddressID, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ShipperID"), ShipperID, obj, QString("QString"));
    
        

    
    QList<SWGShipmentItem*>* SpecsList = Specs;
    QJsonArray SpecsJsonArray;
    toJsonArray((QList<void*>*)Specs, &SpecsJsonArray, "Specs", "SWGShipmentItem");

    obj->insert("Specs", SpecsJsonArray);
    

    
    toJsonValue(QString("xp"), xp, obj, QString("SWGObject"));
    
        

    return obj;
}

QString*
SWGLineItem::getID() {
    return ID;
}
void
SWGLineItem::setID(QString* ID) {
    this->ID = ID;
}

QString*
SWGLineItem::getProductID() {
    return ProductID;
}
void
SWGLineItem::setProductID(QString* ProductID) {
    this->ProductID = ProductID;
}

qint32
SWGLineItem::getQuantity() {
    return Quantity;
}
void
SWGLineItem::setQuantity(qint32 Quantity) {
    this->Quantity = Quantity;
}

SWGNumber*
SWGLineItem::getUnitPrice() {
    return UnitPrice;
}
void
SWGLineItem::setUnitPrice(SWGNumber* UnitPrice) {
    this->UnitPrice = UnitPrice;
}

QString*
SWGLineItem::getCostCenter() {
    return CostCenter;
}
void
SWGLineItem::setCostCenter(QString* CostCenter) {
    this->CostCenter = CostCenter;
}

QDate*
SWGLineItem::getDateNeeded() {
    return DateNeeded;
}
void
SWGLineItem::setDateNeeded(QDate* DateNeeded) {
    this->DateNeeded = DateNeeded;
}

QString*
SWGLineItem::getShippingAccount() {
    return ShippingAccount;
}
void
SWGLineItem::setShippingAccount(QString* ShippingAccount) {
    this->ShippingAccount = ShippingAccount;
}

QString*
SWGLineItem::getShippingAddressID() {
    return ShippingAddressID;
}
void
SWGLineItem::setShippingAddressID(QString* ShippingAddressID) {
    this->ShippingAddressID = ShippingAddressID;
}

QString*
SWGLineItem::getShipfromAddressID() {
    return ShipfromAddressID;
}
void
SWGLineItem::setShipfromAddressID(QString* ShipfromAddressID) {
    this->ShipfromAddressID = ShipfromAddressID;
}

QString*
SWGLineItem::getShipperID() {
    return ShipperID;
}
void
SWGLineItem::setShipperID(QString* ShipperID) {
    this->ShipperID = ShipperID;
}

QList<SWGShipmentItem*>*
SWGLineItem::getSpecs() {
    return Specs;
}
void
SWGLineItem::setSpecs(QList<SWGShipmentItem*>* Specs) {
    this->Specs = Specs;
}

SWGObject*
SWGLineItem::getXp() {
    return xp;
}
void
SWGLineItem::setXp(SWGObject* xp) {
    this->xp = xp;
}



} /* namespace Swagger */

