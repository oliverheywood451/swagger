//
// PriceScheduleAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PriceScheduleAPI: APIBase {
    /**

     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func callGet(priceScheduleID priceScheduleID: String, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        callGetWithRequestBuilder(priceScheduleID: priceScheduleID).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /priceschedules/{priceScheduleID}
     - OAuth:
       - type: oauth2
       - name: auth
     - examples: [{example="{}", contentType=application/json}]
     
     - parameter priceScheduleID: (path) ID of the price schedule. 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func callGetWithRequestBuilder(priceScheduleID priceScheduleID: String) -> RequestBuilder<AnyObject> {
        var path = "/priceschedules/{priceScheduleID}"
        path = path.stringByReplacingOccurrencesOfString("{priceScheduleID}", withString: "\(priceScheduleID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter priceSchedule: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func create(priceSchedule priceSchedule: PriceSchedule, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        createWithRequestBuilder(priceSchedule: priceSchedule).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /priceschedules
     - OAuth:
       - type: oauth2
       - name: auth
     - examples: [{example="{}", contentType=application/json}]
     
     - parameter priceSchedule: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func createWithRequestBuilder(priceSchedule priceSchedule: PriceSchedule) -> RequestBuilder<AnyObject> {
        let path = "/priceschedules"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = priceSchedule.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func delete(priceScheduleID priceScheduleID: String, completion: ((error: ErrorType?) -> Void)) {
        deleteWithRequestBuilder(priceScheduleID: priceScheduleID).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /priceschedules/{priceScheduleID}
     - OAuth:
       - type: oauth2
       - name: auth
     
     - parameter priceScheduleID: (path) ID of the price schedule. 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteWithRequestBuilder(priceScheduleID priceScheduleID: String) -> RequestBuilder<Void> {
        var path = "/priceschedules/{priceScheduleID}"
        path = path.stringByReplacingOccurrencesOfString("{priceScheduleID}", withString: "\(priceScheduleID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter quantity: (query) Quantity of the price schedule. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deletePriceBreak(priceScheduleID priceScheduleID: String, quantity: Int32, completion: ((error: ErrorType?) -> Void)) {
        deletePriceBreakWithRequestBuilder(priceScheduleID: priceScheduleID, quantity: quantity).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /priceschedules/{priceScheduleID}/PriceBreaks
     - OAuth:
       - type: oauth2
       - name: auth
     
     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter quantity: (query) Quantity of the price schedule. 

     - returns: RequestBuilder<Void> 
     */
    public class func deletePriceBreakWithRequestBuilder(priceScheduleID priceScheduleID: String, quantity: Int32) -> RequestBuilder<Void> {
        var path = "/priceschedules/{priceScheduleID}/PriceBreaks"
        path = path.stringByReplacingOccurrencesOfString("{priceScheduleID}", withString: "\(priceScheduleID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "quantity": quantity.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter search: (query) Word or phrase to search for. (optional)
     - parameter searchOn: (query) Comma-delimited list of fields to search on. (optional)
     - parameter sortBy: (query) Comma-delimited list of fields to sort by. (optional)
     - parameter page: (query) Page of results to return. Default: 1 (optional)
     - parameter pageSize: (query) Number of results to return per page. Default: 20, max: 100. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func list(search search: String? = nil, searchOn: String? = nil, sortBy: String? = nil, page: Int32? = nil, pageSize: Int32? = nil, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        listWithRequestBuilder(search: search, searchOn: searchOn, sortBy: sortBy, page: page, pageSize: pageSize).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /priceschedules
     - OAuth:
       - type: oauth2
       - name: auth
     - examples: [{example="{}", contentType=application/json}]
     
     - parameter search: (query) Word or phrase to search for. (optional)
     - parameter searchOn: (query) Comma-delimited list of fields to search on. (optional)
     - parameter sortBy: (query) Comma-delimited list of fields to sort by. (optional)
     - parameter page: (query) Page of results to return. Default: 1 (optional)
     - parameter pageSize: (query) Number of results to return per page. Default: 20, max: 100. (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func listWithRequestBuilder(search search: String? = nil, searchOn: String? = nil, sortBy: String? = nil, page: Int32? = nil, pageSize: Int32? = nil) -> RequestBuilder<AnyObject> {
        let path = "/priceschedules"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "search": search,
            "searchOn": searchOn,
            "sortBy": sortBy,
            "page": page?.encodeToJSON(),
            "pageSize": pageSize?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter priceSchedule: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func patch(priceScheduleID priceScheduleID: String, priceSchedule: PriceSchedule, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        patchWithRequestBuilder(priceScheduleID: priceScheduleID, priceSchedule: priceSchedule).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - PATCH /priceschedules/{priceScheduleID}
     - OAuth:
       - type: oauth2
       - name: auth
     - examples: [{example="{}", contentType=application/json}]
     
     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter priceSchedule: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func patchWithRequestBuilder(priceScheduleID priceScheduleID: String, priceSchedule: PriceSchedule) -> RequestBuilder<AnyObject> {
        var path = "/priceschedules/{priceScheduleID}"
        path = path.stringByReplacingOccurrencesOfString("{priceScheduleID}", withString: "\(priceScheduleID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = priceSchedule.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter priceBreak: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func savePriceBreak(priceScheduleID priceScheduleID: String, priceBreak: PriceBreak, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        savePriceBreakWithRequestBuilder(priceScheduleID: priceScheduleID, priceBreak: priceBreak).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /priceschedules/{priceScheduleID}/PriceBreaks
     - OAuth:
       - type: oauth2
       - name: auth
     - examples: [{example="{}", contentType=application/json}]
     
     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter priceBreak: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func savePriceBreakWithRequestBuilder(priceScheduleID priceScheduleID: String, priceBreak: PriceBreak) -> RequestBuilder<AnyObject> {
        var path = "/priceschedules/{priceScheduleID}/PriceBreaks"
        path = path.stringByReplacingOccurrencesOfString("{priceScheduleID}", withString: "\(priceScheduleID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = priceBreak.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter priceSchedule: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func update(priceScheduleID priceScheduleID: String, priceSchedule: PriceSchedule, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        updateWithRequestBuilder(priceScheduleID: priceScheduleID, priceSchedule: priceSchedule).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - PUT /priceschedules/{priceScheduleID}
     - OAuth:
       - type: oauth2
       - name: auth
     - examples: [{example="{}", contentType=application/json}]
     
     - parameter priceScheduleID: (path) ID of the price schedule. 
     - parameter priceSchedule: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func updateWithRequestBuilder(priceScheduleID priceScheduleID: String, priceSchedule: PriceSchedule) -> RequestBuilder<AnyObject> {
        var path = "/priceschedules/{priceScheduleID}"
        path = path.stringByReplacingOccurrencesOfString("{priceScheduleID}", withString: "\(priceScheduleID)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = priceSchedule.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
