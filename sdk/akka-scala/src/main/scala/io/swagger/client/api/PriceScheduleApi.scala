/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Any
import io.swagger.client.model.PriceSchedule
import io.swagger.client.model.PriceBreak
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object PriceScheduleApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 201 : Any 
   * 
   * @param priceSchedule 
   */
  def create(priceSchedule: PriceSchedule): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.POST, "https://api.ordercloud.io/v1", "/priceschedules", "application/json")
      .withBody(priceSchedule)
      .withSuccessResponse[Any](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param priceScheduleID ID of the price schedule.
   */
  def delete(priceScheduleID: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.ordercloud.io/v1", "/priceschedules/{priceScheduleID}", "application/json")
      .withPathParam("priceScheduleID", priceScheduleID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param priceScheduleID ID of the price schedule.
   * @param quantity Quantity of the price schedule.
   */
  def deletePriceBreak(priceScheduleID: String, quantity: Int): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.ordercloud.io/v1", "/priceschedules/{priceScheduleID}/PriceBreaks", "application/json")
      .withQueryParam("quantity", quantity)
      .withPathParam("priceScheduleID", priceScheduleID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param priceScheduleID ID of the price schedule.
   */
  def get(priceScheduleID: String): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/priceschedules/{priceScheduleID}", "application/json")
      .withPathParam("priceScheduleID", priceScheduleID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param search Word or phrase to search for.
   * @param searchOn Comma-delimited list of fields to search on.
   * @param sortBy Comma-delimited list of fields to sort by.
   * @param page Page of results to return. Default: 1
   * @param pageSize Number of results to return per page. Default: 20, max: 100.
   */
  def list(search: Option[String] = None, searchOn: Option[String] = None, sortBy: Option[String] = None, page: Option[Int] = None, pageSize: Option[Int] = None): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/priceschedules", "application/json")
      .withQueryParam("search", search)
      .withQueryParam("searchOn", searchOn)
      .withQueryParam("sortBy", sortBy)
      .withQueryParam("page", page)
      .withQueryParam("pageSize", pageSize)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param priceScheduleID ID of the price schedule.
   * @param priceSchedule 
   */
  def patch(priceScheduleID: String, priceSchedule: PriceSchedule): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.PATCH, "https://api.ordercloud.io/v1", "/priceschedules/{priceScheduleID}", "application/json")
      .withBody(priceSchedule)
      .withPathParam("priceScheduleID", priceScheduleID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 201 : Any 
   * 
   * @param priceScheduleID ID of the price schedule.
   * @param priceBreak 
   */
  def savePriceBreak(priceScheduleID: String, priceBreak: PriceBreak): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.POST, "https://api.ordercloud.io/v1", "/priceschedules/{priceScheduleID}/PriceBreaks", "application/json")
      .withBody(priceBreak)
      .withPathParam("priceScheduleID", priceScheduleID)
      .withSuccessResponse[Any](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param priceScheduleID ID of the price schedule.
   * @param priceSchedule 
   */
  def update(priceScheduleID: String, priceSchedule: PriceSchedule): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.PUT, "https://api.ordercloud.io/v1", "/priceschedules/{priceScheduleID}", "application/json")
      .withBody(priceSchedule)
      .withPathParam("priceScheduleID", priceScheduleID)
      .withSuccessResponse[Any](200)
      

}

