/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Any
import io.swagger.client.model.UserGroup
import io.swagger.client.model.UserGroupAssignment
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object UserGroupApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 201 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param group 
   */
  def create(buyerID: String, group: UserGroup): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.POST, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups", "application/json")
      .withBody(group)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Any](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupID ID of the user group.
   */
  def delete(buyerID: String, userGroupID: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/{userGroupID}", "application/json")
      .withPathParam("buyerID", buyerID)
      .withPathParam("userGroupID", userGroupID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupID ID of the user group.
   * @param userID ID of the user.
   */
  def deleteUserAssignment(buyerID: String, userGroupID: String, userID: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/{userGroupID}/assignments/{userID}", "application/json")
      .withPathParam("buyerID", buyerID)
      .withPathParam("userGroupID", userGroupID)
      .withPathParam("userID", userID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupID ID of the user group.
   */
  def get(buyerID: String, userGroupID: String): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/{userGroupID}", "application/json")
      .withPathParam("buyerID", buyerID)
      .withPathParam("userGroupID", userGroupID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param search Word or phrase to search for.
   * @param searchOn Comma-delimited list of fields to search on.
   * @param sortBy Comma-delimited list of fields to sort by.
   * @param page Page of results to return. Default: 1
   * @param pageSize Number of results to return per page. Default: 20, max: 100.
   */
  def list(buyerID: String, search: Option[String] = None, searchOn: Option[String] = None, sortBy: Option[String] = None, page: Option[Int] = None, pageSize: Option[Int] = None): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups", "application/json")
      .withQueryParam("search", search)
      .withQueryParam("searchOn", searchOn)
      .withQueryParam("sortBy", sortBy)
      .withQueryParam("page", page)
      .withQueryParam("pageSize", pageSize)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupID ID of the user group.
   * @param userID ID of the user.
   * @param page Page of results to return. Default: 1
   * @param pageSize Number of results to return per page. Default: 20, max: 100.
   */
  def listUserAssignments(buyerID: String, userGroupID: Option[String] = None, userID: Option[String] = None, page: Option[Int] = None, pageSize: Option[Int] = None): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/assignments", "application/json")
      .withQueryParam("userGroupID", userGroupID)
      .withQueryParam("userID", userID)
      .withQueryParam("page", page)
      .withQueryParam("pageSize", pageSize)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupID ID of the user group.
   * @param group 
   */
  def patch(buyerID: String, userGroupID: String, group: UserGroup): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PATCH, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/{userGroupID}", "application/json")
      .withBody(group)
      .withPathParam("buyerID", buyerID)
      .withPathParam("userGroupID", userGroupID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupAssignment 
   */
  def saveUserAssignment(buyerID: String, userGroupAssignment: UserGroupAssignment): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/assignments", "application/json")
      .withBody(userGroupAssignment)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param userGroupID ID of the user group.
   * @param group 
   */
  def update(buyerID: String, userGroupID: String, group: UserGroup): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.PUT, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/usergroups/{userGroupID}", "application/json")
      .withBody(group)
      .withPathParam("buyerID", buyerID)
      .withPathParam("userGroupID", userGroupID)
      .withSuccessResponse[Any](200)
      

}

