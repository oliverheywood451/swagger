/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Any
import io.swagger.client.model.Address
import io.swagger.client.model.AddressAssignment
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AddressApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 201 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param address 
   */
  def create(buyerID: String, address: Address): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.POST, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses", "application/json")
      .withBody(address)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Any](201)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param addressID ID of the address.
   */
  def delete(buyerID: String, addressID: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/{addressID}", "application/json")
      .withPathParam("buyerID", buyerID)
      .withPathParam("addressID", addressID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param addressID ID of the address.
   * @param userID ID of the user.
   * @param userGroupID ID of the user group.
   */
  def deleteAssignment(buyerID: String, addressID: String, userID: Option[String] = None, userGroupID: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/{addressID}/assignments", "application/json")
      .withQueryParam("userID", userID)
      .withQueryParam("userGroupID", userGroupID)
      .withPathParam("buyerID", buyerID)
      .withPathParam("addressID", addressID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param addressID ID of the address.
   */
  def get(buyerID: String, addressID: String): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/{addressID}", "application/json")
      .withPathParam("buyerID", buyerID)
      .withPathParam("addressID", addressID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param search Word or phrase to search for.
   * @param searchOn Comma-delimited list of fields to search on.
   * @param sortBy Comma-delimited list of fields to sort by.
   * @param page Page of results to return. Default: 1
   * @param pageSize Number of results to return per page. Default: 20, max: 100.
   */
  def list(buyerID: String, search: Option[String] = None, searchOn: Option[String] = None, sortBy: Option[String] = None, page: Option[Int] = None, pageSize: Option[Int] = None): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses", "application/json")
      .withQueryParam("search", search)
      .withQueryParam("searchOn", searchOn)
      .withQueryParam("sortBy", sortBy)
      .withQueryParam("page", page)
      .withQueryParam("pageSize", pageSize)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param addressID ID of the address.
   * @param userID ID of the user.
   * @param userGroupID ID of the user group.
   * @param level Level of the address.
   * @param isShipping Is shipping of the address.
   * @param isBilling Is billing of the address.
   * @param page Page of results to return. Default: 1
   * @param pageSize Number of results to return per page. Default: 20, max: 100.
   */
  def listAssignments(buyerID: String, addressID: Option[String] = None, userID: Option[String] = None, userGroupID: Option[String] = None, level: Option[String] = None, isShipping: Option[Boolean] = None, isBilling: Option[Boolean] = None, page: Option[Int] = None, pageSize: Option[Int] = None): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.GET, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/assignments", "application/json")
      .withQueryParam("addressID", addressID)
      .withQueryParam("userID", userID)
      .withQueryParam("userGroupID", userGroupID)
      .withQueryParam("level", level)
      .withQueryParam("isShipping", isShipping)
      .withQueryParam("isBilling", isBilling)
      .withQueryParam("page", page)
      .withQueryParam("pageSize", pageSize)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param addressID ID of the address.
   * @param address 
   */
  def patch(buyerID: String, addressID: String, address: Address): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.PATCH, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/{addressID}", "application/json")
      .withBody(address)
      .withPathParam("buyerID", buyerID)
      .withPathParam("addressID", addressID)
      .withSuccessResponse[Any](200)
        /**
   * 
   * 
   * Expected answers:
   *   code 204 :  
   * 
   * @param buyerID ID of the buyer.
   * @param assignment 
   */
  def saveAssignment(buyerID: String, assignment: AddressAssignment): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/assignments", "application/json")
      .withBody(assignment)
      .withPathParam("buyerID", buyerID)
      .withSuccessResponse[Unit](204)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Any 
   * 
   * @param buyerID ID of the buyer.
   * @param addressID ID of the address.
   * @param address 
   */
  def update(buyerID: String, addressID: String, address: Address): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.PUT, "https://api.ordercloud.io/v1", "/buyers/{buyerID}/addresses/{addressID}", "application/json")
      .withBody(address)
      .withPathParam("buyerID", buyerID)
      .withPathParam("addressID", addressID)
      .withSuccessResponse[Any](200)
      

}

