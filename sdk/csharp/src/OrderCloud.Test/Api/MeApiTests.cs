/* 
 * OrderCloud
 *
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using OrderCloud.Client;
using OrderCloud.Api;
using OrderCloud.Model;

namespace OrderCloud.Test
{
    /// <summary>
    ///  Class for testing MeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MeApiTests
    {
        private MeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MeApi
            //Assert.IsInstanceOfType(typeof(MeApi), instance, "instance is a MeApi");
        }

        
        /// <summary>
        /// Test CreateAddress
        /// </summary>
        [Test]
        public void CreateAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BuyerAddress address = null;
            //var response = instance.CreateAddress(address);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateCreditCard
        /// </summary>
        [Test]
        public void CreateCreditCardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BuyerCreditCard creditCard = null;
            //var response = instance.CreateCreditCard(creditCard);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DeleteAddress
        /// </summary>
        [Test]
        public void DeleteAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string addressID = null;
            //instance.DeleteAddress(addressID);
            
        }
        
        /// <summary>
        /// Test DeleteCreditCard
        /// </summary>
        [Test]
        public void DeleteCreditCardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditcardID = null;
            //instance.DeleteCreditCard(creditcardID);
            
        }
        
        /// <summary>
        /// Test Get
        /// </summary>
        [Test]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Get();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GetAddress
        /// </summary>
        [Test]
        public void GetAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string addressID = null;
            //var response = instance.GetAddress(addressID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GetCreditCard
        /// </summary>
        [Test]
        public void GetCreditCardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditcardID = null;
            //var response = instance.GetCreditCard(creditcardID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Test]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderID = null;
            //var response = instance.GetOrder(orderID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GetProduct
        /// </summary>
        [Test]
        public void GetProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productID = null;
            //var response = instance.GetProduct(productID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GetPromotion
        /// </summary>
        [Test]
        public void GetPromotionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string promotionID = null;
            //var response = instance.GetPromotion(promotionID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GetSpec
        /// </summary>
        [Test]
        public void GetSpecTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productID = null;
            //string specID = null;
            //var response = instance.GetSpec(productID, specID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListAddresses
        /// </summary>
        [Test]
        public void ListAddressesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListAddresses(search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListCategories
        /// </summary>
        [Test]
        public void ListCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string depth = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListCategories(depth, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListCostCenters
        /// </summary>
        [Test]
        public void ListCostCentersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListCostCenters(search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListCreditCards
        /// </summary>
        [Test]
        public void ListCreditCardsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListCreditCards(search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListIncomingOrders
        /// </summary>
        [Test]
        public void ListIncomingOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string from = null;
            //string to = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListIncomingOrders(from, to, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListOutgoingOrders
        /// </summary>
        [Test]
        public void ListOutgoingOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string from = null;
            //string to = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListOutgoingOrders(from, to, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListProducts
        /// </summary>
        [Test]
        public void ListProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string categoryID = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListProducts(categoryID, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListPromotions
        /// </summary>
        [Test]
        public void ListPromotionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListPromotions(search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListSpecs
        /// </summary>
        [Test]
        public void ListSpecsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string productID = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListSpecs(productID, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListSubcategories
        /// </summary>
        [Test]
        public void ListSubcategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentID = null;
            //string depth = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListSubcategories(parentID, depth, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListUserGroups
        /// </summary>
        [Test]
        public void ListUserGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.ListUserGroups(search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test Patch
        /// </summary>
        [Test]
        public void PatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //User user = null;
            //var response = instance.Patch(user);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PatchAddress
        /// </summary>
        [Test]
        public void PatchAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string addressID = null;
            //BuyerAddress address = null;
            //instance.PatchAddress(addressID, address);
            
        }
        
        /// <summary>
        /// Test PatchCreditCard
        /// </summary>
        [Test]
        public void PatchCreditCardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditcardID = null;
            //BuyerCreditCard creditCard = null;
            //instance.PatchCreditCard(creditcardID, creditCard);
            
        }
        
        /// <summary>
        /// Test Update
        /// </summary>
        [Test]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //User user = null;
            //var response = instance.Update(user);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test UpdateAddress
        /// </summary>
        [Test]
        public void UpdateAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string addressID = null;
            //BuyerAddress address = null;
            //var response = instance.UpdateAddress(addressID, address);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test UpdateCreditCard
        /// </summary>
        [Test]
        public void UpdateCreditCardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string creditcardID = null;
            //BuyerCreditCard creditCard = null;
            //var response = instance.UpdateCreditCard(creditcardID, creditCard);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
    }

}
