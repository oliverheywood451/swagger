/* 
 * OrderCloud
 *
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using OrderCloud.Client;
using OrderCloud.Api;
using OrderCloud.Model;

namespace OrderCloud.Test
{
    /// <summary>
    ///  Class for testing LineItemApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LineItemApiTests
    {
        private LineItemApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LineItemApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LineItemApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LineItemApi
            //Assert.IsInstanceOfType(typeof(LineItemApi), instance, "instance is a LineItemApi");
        }

        
        /// <summary>
        /// Test Create
        /// </summary>
        [Test]
        public void CreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //LineItem lineItem = null;
            //var response = instance.Create(buyerID, orderID, lineItem);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test Delete
        /// </summary>
        [Test]
        public void DeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string lineItemID = null;
            //instance.Delete(buyerID, orderID, lineItemID);
            
        }
        
        /// <summary>
        /// Test Get
        /// </summary>
        [Test]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string lineItemID = null;
            //var response = instance.Get(buyerID, orderID, lineItemID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test List
        /// </summary>
        [Test]
        public void ListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string search = null;
            //string searchOn = null;
            //string sortBy = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.List(buyerID, orderID, search, searchOn, sortBy, page, pageSize);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test Patch
        /// </summary>
        [Test]
        public void PatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string lineItemID = null;
            //LineItem partialLineItem = null;
            //var response = instance.Patch(buyerID, orderID, lineItemID, partialLineItem);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test PatchShippingAddress
        /// </summary>
        [Test]
        public void PatchShippingAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string lineItemID = null;
            //Address address = null;
            //var response = instance.PatchShippingAddress(buyerID, orderID, lineItemID, address);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SetShippingAddress
        /// </summary>
        [Test]
        public void SetShippingAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string lineItemID = null;
            //Address address = null;
            //var response = instance.SetShippingAddress(buyerID, orderID, lineItemID, address);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test Update
        /// </summary>
        [Test]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string buyerID = null;
            //string orderID = null;
            //string lineItemID = null;
            //LineItem lineItem = null;
            //var response = instance.Update(buyerID, orderID, lineItemID, lineItem);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
    }

}
