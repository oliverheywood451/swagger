/* 
 * OrderCloud
 *
 * A full ecommerce backend as a service.
 *
 * OpenAPI spec version: 0.1
 * Contact: ordercloud@four51.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using OrderCloud.Api;
using OrderCloud.Model;
using OrderCloud.Client;
using System.Reflection;

namespace OrderCloud.Test
{
    /// <summary>
    ///  Class for testing Promotion
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class PromotionTests
    {
        // TODO uncomment below to declare an instance variable for Promotion
        //private Promotion instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Promotion
            //instance = new Promotion();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Promotion
        /// </summary>
        [Test]
        public void PromotionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Promotion
            //Assert.IsInstanceOfType<Promotion> (instance, "variable 'instance' is a Promotion");
        }

        /// <summary>
        /// Test the property 'ID'
        /// </summary>
        [Test]
        public void IDTest()
        {
            // TODO unit test for the property 'ID'
        }
        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Test]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'UsagesRemaining'
        /// </summary>
        [Test]
        public void UsagesRemainingTest()
        {
            // TODO unit test for the property 'UsagesRemaining'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'FinePrint'
        /// </summary>
        [Test]
        public void FinePrintTest()
        {
            // TODO unit test for the property 'FinePrint'
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Test]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'ExpirationDate'
        /// </summary>
        [Test]
        public void ExpirationDateTest()
        {
            // TODO unit test for the property 'ExpirationDate'
        }
        /// <summary>
        /// Test the property 'EligibleExpression'
        /// </summary>
        [Test]
        public void EligibleExpressionTest()
        {
            // TODO unit test for the property 'EligibleExpression'
        }
        /// <summary>
        /// Test the property 'ValueExpression'
        /// </summary>
        [Test]
        public void ValueExpressionTest()
        {
            // TODO unit test for the property 'ValueExpression'
        }
        /// <summary>
        /// Test the property 'CanCombine'
        /// </summary>
        [Test]
        public void CanCombineTest()
        {
            // TODO unit test for the property 'CanCombine'
        }
        /// <summary>
        /// Test the property 'Xp'
        /// </summary>
        [Test]
        public void XpTest()
        {
            // TODO unit test for the property 'Xp'
        }

    }

}
